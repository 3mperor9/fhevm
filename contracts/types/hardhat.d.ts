/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { ethers } from "ethers";
import {
  DeployContractOptions,
  FactoryOptions,
  HardhatEthersHelpers as HardhatEthersHelpersBase,
} from "@nomicfoundation/hardhat-ethers/types";

import * as Contracts from ".";

declare module "hardhat/types/runtime" {
  interface HardhatEthersHelpers extends HardhatEthersHelpersBase {
    getContractFactory(
      name: "Ownable2StepUpgradeable",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.Ownable2StepUpgradeable__factory>;
    getContractFactory(
      name: "OwnableUpgradeable",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.OwnableUpgradeable__factory>;
    getContractFactory(
      name: "Initializable",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.Initializable__factory>;
    getContractFactory(
      name: "UUPSUpgradeable",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.UUPSUpgradeable__factory>;
    getContractFactory(
      name: "ContextUpgradeable",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ContextUpgradeable__factory>;
    getContractFactory(
      name: "EIP712Upgradeable",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.EIP712Upgradeable__factory>;
    getContractFactory(
      name: "Ownable",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.Ownable__factory>;
    getContractFactory(
      name: "Ownable2Step",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.Ownable2Step__factory>;
    getContractFactory(
      name: "IERC1822Proxiable",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC1822Proxiable__factory>;
    getContractFactory(
      name: "IERC1967",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC1967__factory>;
    getContractFactory(
      name: "IERC5267",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC5267__factory>;
    getContractFactory(
      name: "IBeacon",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IBeacon__factory>;
    getContractFactory(
      name: "ERC1967Utils",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ERC1967Utils__factory>;
    getContractFactory(
      name: "Address",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.Address__factory>;
    getContractFactory(
      name: "ECDSA",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ECDSA__factory>;
    getContractFactory(
      name: "Errors",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.Errors__factory>;
    getContractFactory(
      name: "SafeCast",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.SafeCast__factory>;
    getContractFactory(
      name: "Strings",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.Strings__factory>;
    getContractFactory(
      name: "ACL",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ACL__factory>;
    getContractFactory(
      name: "FHEPayment",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.FHEPayment__factory>;
    getContractFactory(
      name: "InputVerifier",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.InputVerifier__factory>;
    getContractFactory(
      name: "InputVerifier",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.InputVerifier__factory>;
    getContractFactory(
      name: "KMSVerifier",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.KMSVerifier__factory>;
    getContractFactory(
      name: "IInputVerifier",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IInputVerifier__factory>;
    getContractFactory(
      name: "TFHEExecutor",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.TFHEExecutor__factory>;
    getContractFactory(
      name: "IInputVerifier",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IInputVerifier__factory>;
    getContractFactory(
      name: "TFHEExecutor",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.TFHEExecutor__factory>;
    getContractFactory(
      name: "ACLUpgradedExample",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ACLUpgradedExample__factory>;
    getContractFactory(
      name: "ACLUpgradedExample2",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ACLUpgradedExample2__factory>;
    getContractFactory(
      name: "BlindAuction",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.BlindAuction__factory>;
    getContractFactory(
      name: "Counter",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.Counter__factory>;
    getContractFactory(
      name: "EncryptedERC20",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.EncryptedERC20__factory>;
    getContractFactory(
      name: "FHEPaymentUpgradedExample",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.FHEPaymentUpgradedExample__factory>;
    getContractFactory(
      name: "GatewayContractUpgradedExample",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.GatewayContractUpgradedExample__factory>;
    getContractFactory(
      name: "KMSVerifierUpgradedExample",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.KMSVerifierUpgradedExample__factory>;
    getContractFactory(
      name: "PaymentLimit",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.PaymentLimit__factory>;
    getContractFactory(
      name: "Rand",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.Rand__factory>;
    getContractFactory(
      name: "Reencrypt",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.Reencrypt__factory>;
    getContractFactory(
      name: "Regression1",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.Regression1__factory>;
    getContractFactory(
      name: "SmartAccount",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.SmartAccount__factory>;
    getContractFactory(
      name: "TestAsyncDecrypt",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.TestAsyncDecrypt__factory>;
    getContractFactory(
      name: "TFHEManualTestSuite",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.TFHEManualTestSuite__factory>;
    getContractFactory(
      name: "TFHETestSuite1",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.TFHETestSuite1__factory>;
    getContractFactory(
      name: "TFHETestSuite10",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.TFHETestSuite10__factory>;
    getContractFactory(
      name: "TFHETestSuite11",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.TFHETestSuite11__factory>;
    getContractFactory(
      name: "TFHETestSuite2",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.TFHETestSuite2__factory>;
    getContractFactory(
      name: "TFHETestSuite3",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.TFHETestSuite3__factory>;
    getContractFactory(
      name: "TFHETestSuite4",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.TFHETestSuite4__factory>;
    getContractFactory(
      name: "TFHETestSuite5",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.TFHETestSuite5__factory>;
    getContractFactory(
      name: "TFHETestSuite6",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.TFHETestSuite6__factory>;
    getContractFactory(
      name: "TFHETestSuite7",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.TFHETestSuite7__factory>;
    getContractFactory(
      name: "TFHETestSuite8",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.TFHETestSuite8__factory>;
    getContractFactory(
      name: "TFHETestSuite9",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.TFHETestSuite9__factory>;
    getContractFactory(
      name: "TFHEExecutorUpgradedExample",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.TFHEExecutorUpgradedExample__factory>;
    getContractFactory(
      name: "SubContract",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.SubContract__factory>;
    getContractFactory(
      name: "SubContractCreate",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.SubContractCreate__factory>;
    getContractFactory(
      name: "SubContractCreateFail",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.SubContractCreateFail__factory>;
    getContractFactory(
      name: "TracingSubCalls",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.TracingSubCalls__factory>;
    getContractFactory(
      name: "GatewayContract",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.GatewayContract__factory>;
    getContractFactory(
      name: "IKMSVerifier",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IKMSVerifier__factory>;
    getContractFactory(
      name: "IGatewayContract",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IGatewayContract__factory>;
    getContractFactory(
      name: "IACL",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IACL__factory>;
    getContractFactory(
      name: "ITFHEExecutor",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ITFHEExecutor__factory>;
    getContractFactory(
      name: "IFHEPayment",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IFHEPayment__factory>;

    getContractAt(
      name: "Ownable2StepUpgradeable",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.Ownable2StepUpgradeable>;
    getContractAt(
      name: "OwnableUpgradeable",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.OwnableUpgradeable>;
    getContractAt(
      name: "Initializable",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.Initializable>;
    getContractAt(
      name: "UUPSUpgradeable",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.UUPSUpgradeable>;
    getContractAt(
      name: "ContextUpgradeable",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.ContextUpgradeable>;
    getContractAt(
      name: "EIP712Upgradeable",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.EIP712Upgradeable>;
    getContractAt(
      name: "Ownable",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.Ownable>;
    getContractAt(
      name: "Ownable2Step",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.Ownable2Step>;
    getContractAt(
      name: "IERC1822Proxiable",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC1822Proxiable>;
    getContractAt(
      name: "IERC1967",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC1967>;
    getContractAt(
      name: "IERC5267",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC5267>;
    getContractAt(
      name: "IBeacon",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.IBeacon>;
    getContractAt(
      name: "ERC1967Utils",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.ERC1967Utils>;
    getContractAt(
      name: "Address",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.Address>;
    getContractAt(
      name: "ECDSA",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.ECDSA>;
    getContractAt(
      name: "Errors",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.Errors>;
    getContractAt(
      name: "SafeCast",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.SafeCast>;
    getContractAt(
      name: "Strings",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.Strings>;
    getContractAt(
      name: "ACL",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.ACL>;
    getContractAt(
      name: "FHEPayment",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.FHEPayment>;
    getContractAt(
      name: "InputVerifier",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.InputVerifier>;
    getContractAt(
      name: "InputVerifier",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.InputVerifier>;
    getContractAt(
      name: "KMSVerifier",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.KMSVerifier>;
    getContractAt(
      name: "IInputVerifier",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.IInputVerifier>;
    getContractAt(
      name: "TFHEExecutor",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.TFHEExecutor>;
    getContractAt(
      name: "IInputVerifier",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.IInputVerifier>;
    getContractAt(
      name: "TFHEExecutor",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.TFHEExecutor>;
    getContractAt(
      name: "ACLUpgradedExample",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.ACLUpgradedExample>;
    getContractAt(
      name: "ACLUpgradedExample2",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.ACLUpgradedExample2>;
    getContractAt(
      name: "BlindAuction",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.BlindAuction>;
    getContractAt(
      name: "Counter",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.Counter>;
    getContractAt(
      name: "EncryptedERC20",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.EncryptedERC20>;
    getContractAt(
      name: "FHEPaymentUpgradedExample",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.FHEPaymentUpgradedExample>;
    getContractAt(
      name: "GatewayContractUpgradedExample",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.GatewayContractUpgradedExample>;
    getContractAt(
      name: "KMSVerifierUpgradedExample",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.KMSVerifierUpgradedExample>;
    getContractAt(
      name: "PaymentLimit",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.PaymentLimit>;
    getContractAt(
      name: "Rand",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.Rand>;
    getContractAt(
      name: "Reencrypt",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.Reencrypt>;
    getContractAt(
      name: "Regression1",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.Regression1>;
    getContractAt(
      name: "SmartAccount",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.SmartAccount>;
    getContractAt(
      name: "TestAsyncDecrypt",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.TestAsyncDecrypt>;
    getContractAt(
      name: "TFHEManualTestSuite",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.TFHEManualTestSuite>;
    getContractAt(
      name: "TFHETestSuite1",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.TFHETestSuite1>;
    getContractAt(
      name: "TFHETestSuite10",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.TFHETestSuite10>;
    getContractAt(
      name: "TFHETestSuite11",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.TFHETestSuite11>;
    getContractAt(
      name: "TFHETestSuite2",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.TFHETestSuite2>;
    getContractAt(
      name: "TFHETestSuite3",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.TFHETestSuite3>;
    getContractAt(
      name: "TFHETestSuite4",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.TFHETestSuite4>;
    getContractAt(
      name: "TFHETestSuite5",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.TFHETestSuite5>;
    getContractAt(
      name: "TFHETestSuite6",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.TFHETestSuite6>;
    getContractAt(
      name: "TFHETestSuite7",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.TFHETestSuite7>;
    getContractAt(
      name: "TFHETestSuite8",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.TFHETestSuite8>;
    getContractAt(
      name: "TFHETestSuite9",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.TFHETestSuite9>;
    getContractAt(
      name: "TFHEExecutorUpgradedExample",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.TFHEExecutorUpgradedExample>;
    getContractAt(
      name: "SubContract",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.SubContract>;
    getContractAt(
      name: "SubContractCreate",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.SubContractCreate>;
    getContractAt(
      name: "SubContractCreateFail",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.SubContractCreateFail>;
    getContractAt(
      name: "TracingSubCalls",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.TracingSubCalls>;
    getContractAt(
      name: "GatewayContract",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.GatewayContract>;
    getContractAt(
      name: "IKMSVerifier",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.IKMSVerifier>;
    getContractAt(
      name: "IGatewayContract",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.IGatewayContract>;
    getContractAt(
      name: "IACL",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.IACL>;
    getContractAt(
      name: "ITFHEExecutor",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.ITFHEExecutor>;
    getContractAt(
      name: "IFHEPayment",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.IFHEPayment>;

    deployContract(
      name: "Ownable2StepUpgradeable",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.Ownable2StepUpgradeable>;
    deployContract(
      name: "OwnableUpgradeable",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.OwnableUpgradeable>;
    deployContract(
      name: "Initializable",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.Initializable>;
    deployContract(
      name: "UUPSUpgradeable",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.UUPSUpgradeable>;
    deployContract(
      name: "ContextUpgradeable",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.ContextUpgradeable>;
    deployContract(
      name: "EIP712Upgradeable",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.EIP712Upgradeable>;
    deployContract(
      name: "Ownable",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.Ownable>;
    deployContract(
      name: "Ownable2Step",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.Ownable2Step>;
    deployContract(
      name: "IERC1822Proxiable",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IERC1822Proxiable>;
    deployContract(
      name: "IERC1967",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IERC1967>;
    deployContract(
      name: "IERC5267",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IERC5267>;
    deployContract(
      name: "IBeacon",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IBeacon>;
    deployContract(
      name: "ERC1967Utils",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.ERC1967Utils>;
    deployContract(
      name: "Address",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.Address>;
    deployContract(
      name: "ECDSA",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.ECDSA>;
    deployContract(
      name: "Errors",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.Errors>;
    deployContract(
      name: "SafeCast",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.SafeCast>;
    deployContract(
      name: "Strings",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.Strings>;
    deployContract(
      name: "ACL",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.ACL>;
    deployContract(
      name: "FHEPayment",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.FHEPayment>;
    deployContract(
      name: "InputVerifier",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.InputVerifier>;
    deployContract(
      name: "InputVerifier",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.InputVerifier>;
    deployContract(
      name: "KMSVerifier",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.KMSVerifier>;
    deployContract(
      name: "IInputVerifier",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IInputVerifier>;
    deployContract(
      name: "TFHEExecutor",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.TFHEExecutor>;
    deployContract(
      name: "IInputVerifier",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IInputVerifier>;
    deployContract(
      name: "TFHEExecutor",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.TFHEExecutor>;
    deployContract(
      name: "ACLUpgradedExample",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.ACLUpgradedExample>;
    deployContract(
      name: "ACLUpgradedExample2",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.ACLUpgradedExample2>;
    deployContract(
      name: "BlindAuction",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.BlindAuction>;
    deployContract(
      name: "Counter",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.Counter>;
    deployContract(
      name: "EncryptedERC20",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.EncryptedERC20>;
    deployContract(
      name: "FHEPaymentUpgradedExample",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.FHEPaymentUpgradedExample>;
    deployContract(
      name: "GatewayContractUpgradedExample",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.GatewayContractUpgradedExample>;
    deployContract(
      name: "KMSVerifierUpgradedExample",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.KMSVerifierUpgradedExample>;
    deployContract(
      name: "PaymentLimit",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.PaymentLimit>;
    deployContract(
      name: "Rand",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.Rand>;
    deployContract(
      name: "Reencrypt",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.Reencrypt>;
    deployContract(
      name: "Regression1",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.Regression1>;
    deployContract(
      name: "SmartAccount",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.SmartAccount>;
    deployContract(
      name: "TestAsyncDecrypt",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.TestAsyncDecrypt>;
    deployContract(
      name: "TFHEManualTestSuite",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.TFHEManualTestSuite>;
    deployContract(
      name: "TFHETestSuite1",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.TFHETestSuite1>;
    deployContract(
      name: "TFHETestSuite10",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.TFHETestSuite10>;
    deployContract(
      name: "TFHETestSuite11",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.TFHETestSuite11>;
    deployContract(
      name: "TFHETestSuite2",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.TFHETestSuite2>;
    deployContract(
      name: "TFHETestSuite3",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.TFHETestSuite3>;
    deployContract(
      name: "TFHETestSuite4",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.TFHETestSuite4>;
    deployContract(
      name: "TFHETestSuite5",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.TFHETestSuite5>;
    deployContract(
      name: "TFHETestSuite6",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.TFHETestSuite6>;
    deployContract(
      name: "TFHETestSuite7",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.TFHETestSuite7>;
    deployContract(
      name: "TFHETestSuite8",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.TFHETestSuite8>;
    deployContract(
      name: "TFHETestSuite9",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.TFHETestSuite9>;
    deployContract(
      name: "TFHEExecutorUpgradedExample",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.TFHEExecutorUpgradedExample>;
    deployContract(
      name: "SubContract",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.SubContract>;
    deployContract(
      name: "SubContractCreate",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.SubContractCreate>;
    deployContract(
      name: "SubContractCreateFail",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.SubContractCreateFail>;
    deployContract(
      name: "TracingSubCalls",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.TracingSubCalls>;
    deployContract(
      name: "GatewayContract",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.GatewayContract>;
    deployContract(
      name: "IKMSVerifier",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IKMSVerifier>;
    deployContract(
      name: "IGatewayContract",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IGatewayContract>;
    deployContract(
      name: "IACL",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IACL>;
    deployContract(
      name: "ITFHEExecutor",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.ITFHEExecutor>;
    deployContract(
      name: "IFHEPayment",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IFHEPayment>;

    deployContract(
      name: "Ownable2StepUpgradeable",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.Ownable2StepUpgradeable>;
    deployContract(
      name: "OwnableUpgradeable",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.OwnableUpgradeable>;
    deployContract(
      name: "Initializable",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.Initializable>;
    deployContract(
      name: "UUPSUpgradeable",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.UUPSUpgradeable>;
    deployContract(
      name: "ContextUpgradeable",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.ContextUpgradeable>;
    deployContract(
      name: "EIP712Upgradeable",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.EIP712Upgradeable>;
    deployContract(
      name: "Ownable",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.Ownable>;
    deployContract(
      name: "Ownable2Step",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.Ownable2Step>;
    deployContract(
      name: "IERC1822Proxiable",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IERC1822Proxiable>;
    deployContract(
      name: "IERC1967",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IERC1967>;
    deployContract(
      name: "IERC5267",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IERC5267>;
    deployContract(
      name: "IBeacon",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IBeacon>;
    deployContract(
      name: "ERC1967Utils",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.ERC1967Utils>;
    deployContract(
      name: "Address",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.Address>;
    deployContract(
      name: "ECDSA",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.ECDSA>;
    deployContract(
      name: "Errors",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.Errors>;
    deployContract(
      name: "SafeCast",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.SafeCast>;
    deployContract(
      name: "Strings",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.Strings>;
    deployContract(
      name: "ACL",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.ACL>;
    deployContract(
      name: "FHEPayment",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.FHEPayment>;
    deployContract(
      name: "InputVerifier",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.InputVerifier>;
    deployContract(
      name: "InputVerifier",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.InputVerifier>;
    deployContract(
      name: "KMSVerifier",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.KMSVerifier>;
    deployContract(
      name: "IInputVerifier",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IInputVerifier>;
    deployContract(
      name: "TFHEExecutor",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.TFHEExecutor>;
    deployContract(
      name: "IInputVerifier",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IInputVerifier>;
    deployContract(
      name: "TFHEExecutor",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.TFHEExecutor>;
    deployContract(
      name: "ACLUpgradedExample",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.ACLUpgradedExample>;
    deployContract(
      name: "ACLUpgradedExample2",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.ACLUpgradedExample2>;
    deployContract(
      name: "BlindAuction",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.BlindAuction>;
    deployContract(
      name: "Counter",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.Counter>;
    deployContract(
      name: "EncryptedERC20",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.EncryptedERC20>;
    deployContract(
      name: "FHEPaymentUpgradedExample",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.FHEPaymentUpgradedExample>;
    deployContract(
      name: "GatewayContractUpgradedExample",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.GatewayContractUpgradedExample>;
    deployContract(
      name: "KMSVerifierUpgradedExample",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.KMSVerifierUpgradedExample>;
    deployContract(
      name: "PaymentLimit",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.PaymentLimit>;
    deployContract(
      name: "Rand",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.Rand>;
    deployContract(
      name: "Reencrypt",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.Reencrypt>;
    deployContract(
      name: "Regression1",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.Regression1>;
    deployContract(
      name: "SmartAccount",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.SmartAccount>;
    deployContract(
      name: "TestAsyncDecrypt",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.TestAsyncDecrypt>;
    deployContract(
      name: "TFHEManualTestSuite",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.TFHEManualTestSuite>;
    deployContract(
      name: "TFHETestSuite1",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.TFHETestSuite1>;
    deployContract(
      name: "TFHETestSuite10",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.TFHETestSuite10>;
    deployContract(
      name: "TFHETestSuite11",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.TFHETestSuite11>;
    deployContract(
      name: "TFHETestSuite2",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.TFHETestSuite2>;
    deployContract(
      name: "TFHETestSuite3",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.TFHETestSuite3>;
    deployContract(
      name: "TFHETestSuite4",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.TFHETestSuite4>;
    deployContract(
      name: "TFHETestSuite5",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.TFHETestSuite5>;
    deployContract(
      name: "TFHETestSuite6",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.TFHETestSuite6>;
    deployContract(
      name: "TFHETestSuite7",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.TFHETestSuite7>;
    deployContract(
      name: "TFHETestSuite8",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.TFHETestSuite8>;
    deployContract(
      name: "TFHETestSuite9",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.TFHETestSuite9>;
    deployContract(
      name: "TFHEExecutorUpgradedExample",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.TFHEExecutorUpgradedExample>;
    deployContract(
      name: "SubContract",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.SubContract>;
    deployContract(
      name: "SubContractCreate",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.SubContractCreate>;
    deployContract(
      name: "SubContractCreateFail",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.SubContractCreateFail>;
    deployContract(
      name: "TracingSubCalls",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.TracingSubCalls>;
    deployContract(
      name: "GatewayContract",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.GatewayContract>;
    deployContract(
      name: "IKMSVerifier",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IKMSVerifier>;
    deployContract(
      name: "IGatewayContract",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IGatewayContract>;
    deployContract(
      name: "IACL",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IACL>;
    deployContract(
      name: "ITFHEExecutor",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.ITFHEExecutor>;
    deployContract(
      name: "IFHEPayment",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IFHEPayment>;

    // default types
    getContractFactory(
      name: string,
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<ethers.ContractFactory>;
    getContractFactory(
      abi: any[],
      bytecode: ethers.BytesLike,
      signer?: ethers.Signer
    ): Promise<ethers.ContractFactory>;
    getContractAt(
      nameOrAbi: string | any[],
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<ethers.Contract>;
    deployContract(
      name: string,
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<ethers.Contract>;
    deployContract(
      name: string,
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<ethers.Contract>;
  }
}
