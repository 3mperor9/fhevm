/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../../../common";
import type {
  InputVerifier,
  InputVerifierInterface,
} from "../../../contracts/InputVerifier.coprocessor.sol/InputVerifier";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "target",
        type: "address",
      },
    ],
    name: "AddressEmptyCode",
    type: "error",
  },
  {
    inputs: [],
    name: "ECDSAInvalidSignature",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "length",
        type: "uint256",
      },
    ],
    name: "ECDSAInvalidSignatureLength",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "s",
        type: "bytes32",
      },
    ],
    name: "ECDSAInvalidSignatureS",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "implementation",
        type: "address",
      },
    ],
    name: "ERC1967InvalidImplementation",
    type: "error",
  },
  {
    inputs: [],
    name: "ERC1967NonPayable",
    type: "error",
  },
  {
    inputs: [],
    name: "FailedCall",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidInitialization",
    type: "error",
  },
  {
    inputs: [],
    name: "NotInitializing",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "OwnableInvalidOwner",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "OwnableUnauthorizedAccount",
    type: "error",
  },
  {
    inputs: [],
    name: "UUPSUnauthorizedCallContext",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "slot",
        type: "bytes32",
      },
    ],
    name: "UUPSUnsupportedProxiableUUID",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [],
    name: "EIP712DomainChanged",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint64",
        name: "version",
        type: "uint64",
      },
    ],
    name: "Initialized",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferStarted",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "implementation",
        type: "address",
      },
    ],
    name: "Upgraded",
    type: "event",
  },
  {
    inputs: [],
    name: "CIPHERTEXTVERIFICATION_COPRO_TYPE",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "HANDLE_VERSION",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "UPGRADE_INTERFACE_VERSION",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "acceptOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "eip712Domain",
    outputs: [
      {
        internalType: "bytes1",
        name: "fields",
        type: "bytes1",
      },
      {
        internalType: "string",
        name: "name",
        type: "string",
      },
      {
        internalType: "string",
        name: "version",
        type: "string",
      },
      {
        internalType: "uint256",
        name: "chainId",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "verifyingContract",
        type: "address",
      },
      {
        internalType: "bytes32",
        name: "salt",
        type: "bytes32",
      },
      {
        internalType: "uint256[]",
        name: "extensions",
        type: "uint256[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getCoprocessorAddress",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getKMSVerifierAddress",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getVersion",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "get_CIPHERTEXTVERIFICATION_COPRO_TYPE",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "initialOwner",
        type: "address",
      },
    ],
    name: "initialize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "kmsVerifier",
    outputs: [
      {
        internalType: "contract KMSVerifier",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "pendingOwner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "proxiableUUID",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newImplementation",
        type: "address",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "upgradeToAndCall",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "aclAddress",
            type: "address",
          },
          {
            internalType: "address",
            name: "userAddress",
            type: "address",
          },
          {
            internalType: "address",
            name: "contractAddress",
            type: "address",
          },
        ],
        internalType: "struct TFHEExecutor.ContextUserInputs",
        name: "context",
        type: "tuple",
      },
      {
        internalType: "bytes32",
        name: "inputHandle",
        type: "bytes32",
      },
      {
        internalType: "bytes",
        name: "inputProof",
        type: "bytes",
      },
    ],
    name: "verifyCiphertext",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60a060405230608052348015610013575f80fd5b5061001c610021565b6100d3565b7ff0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a00805468010000000000000000900460ff16156100715760405163f92ee8a960e01b815260040160405180910390fd5b80546001600160401b03908116146100d05780546001600160401b0319166001600160401b0390811782556040519081527fc7f505b2f371ae2175ee4913f4499e1f2633a7b5936321eed1cdaeb6115181d29060200160405180910390a15b50565b608051612460620000fa5f395f818161118f015281816111b8015261132201526124605ff3fe608060405260043610610123575f3560e01c806384b0196e116100a1578063b578ba0d11610071578063e30c397811610057578063e30c39781461031a578063f0ea684d1461032e578063f2fde38b14610355575f80fd5b8063b578ba0d146102e7578063c4d66de8146102fb575f80fd5b806384b0196e1461023e5780638da5cb5b146102655780638e188f4314610279578063ad3cb1cc1461029f575f80fd5b80634f1ef286116100f65780636a8c8eb4116100dc5780636a8c8eb4146101f1578063715018a61461021657806379ba50971461022a575f80fd5b80634f1ef286146101c857806352d1902d146101dd575f80fd5b806303b031cf146101275780630d8e6e2c146101665780631967d4a6146101875780634d52c1071461019b575b5f80fd5b348015610132575f80fd5b5073208de73316e44722e16f6ddff40881a3e4f861045b6040516001600160a01b0390911681526020015b60405180910390f35b348015610171575f80fd5b5061017a610374565b60405161015d9190611db3565b348015610192575f80fd5b5061017a6103df565b3480156101a6575f80fd5b506101ba6101b5366004611e7d565b6103fb565b60405190815260200161015d565b6101db6101d6366004611f27565b610c3b565b005b3480156101e8575f80fd5b506101ba610c5a565b3480156101fc575f80fd5b506102045f81565b60405160ff909116815260200161015d565b348015610221575f80fd5b506101db610c88565b348015610235575f80fd5b506101db610c9b565b348015610249575f80fd5b50610252610ce3565b60405161015d9796959493929190611f72565b348015610270575f80fd5b50610149610da7565b348015610284575f80fd5b5073c9990fefe0c27d31d0c2aa36196b085c0c4d456c610149565b3480156102aa575f80fd5b5061017a6040518060400160405280600581526020017f352e302e3000000000000000000000000000000000000000000000000000000081525081565b3480156102f2575f80fd5b5061017a610ddb565b348015610306575f80fd5b506101db610315366004612009565b610dfb565b348015610325575f80fd5b50610149610f65565b348015610339575f80fd5b5061014973208de73316e44722e16f6ddff40881a3e4f8610481565b348015610360575f80fd5b506101db61036f366004612009565b610f8d565b60606040518060400160405280600d81526020016c24b7383aba2b32b934b334b2b960991b8152506103a55f611012565b6103af6001611012565b6103b85f611012565b6040516020016103cb9493929190612022565b604051602081830303815290604052905090565b6040518060c00160405280608d81526020016123c7608d913981565b5f805f6104158487602001518860400151895f01516110af565b90925090508460ff601082901c1683610b145785518061047c5760405162461bcd60e51b815260206004820152601060248201527f456d70747920696e70757450726f6f660000000000000000000000000000000060448201526064015b60405180910390fd5b5f875f8151811061048f5761048f61209f565b602001015160f81c60f81b60f81c60ff1690505f886001815181106104b6576104b661209f565b016020015160f81c90508382116104ff5760405162461bcd60e51b815260206004820152600d60248201526c092dcecc2d8d2c840d2dcc8caf609b1b6044820152606401610473565b61050a8160416120c7565b6105158360206120c7565b6105209060636120de565b61052a91906120de565b83146105785760405162461bcd60e51b815260206004820152601e60248201527f4572726f7220646573657269616c697a696e6720696e70757450726f6f6600006044820152606401610473565b60228901515f8367ffffffffffffffff81111561059757610597611dc5565b6040519080825280602002602001820160405280156105c0578160200160208202803683370190505b5090505f5b8481101561064f57602081028c016042015160ff8116156106285760405162461bcd60e51b815260206004820152601460248201527f57726f6e672068616e646c652076657273696f6e0000000000000000000000006044820152606401610473565b8083838151811061063b5761063b61209f565b6020908102919091010152506001016105c5565b50604080516041808252608082019092525f916020820181803683370190505090505f5b6041811015610701578c816106898860206120c7565b6106949060226120de565b61069e91906120de565b815181106106ae576106ae61209f565b602001015160f81c60f81b8282815181106106cb576106cb61209f565b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff191690815f1a905350600101610673565b506040805160a0810182525f80825260208201819052606092820183905291810182905260808101919091528e5f0151815f01906001600160a01b031690816001600160a01b031681525050838160200181815250508281604001819052508e6020015181606001906001600160a01b031690816001600160a01b0316815250508e6040015181608001906001600160a01b031690816001600160a01b0316815250506107ae81836110f2565b50505f8367ffffffffffffffff8111156107ca576107ca611dc5565b6040519080825280602002602001820160405280156107fd57816020015b60608152602001906001900390816107e85790505b5090505f5b8481101561090c5760408051604180825260808201909252906020820181803683370190505082828151811061083a5761083a61209f565b60200260200101819052505f5b6041811015610903578d8161085d8460416120c7565b6108688a60206120c7565b6108739060636120de565b61087d91906120de565b61088791906120de565b815181106108975761089761209f565b602001015160f81c60f81b8383815181106108b4576108b461209f565b602002602001015182815181106108cd576108cd61209f565b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff191690815f1a905350600101610847565b50600101610802565b50604080516080810182525f8082526020820181905291810182905260608101919091528e5f0151815f01906001600160a01b031690816001600160a01b031681525050838160200181815250508e6020015181604001906001600160a01b031690816001600160a01b0316815250508e6040015181606001906001600160a01b031690816001600160a01b0316815250505f73208de73316e44722e16f6ddff40881a3e4f861046001600160a01b0316630e66e3f283856040518363ffffffff1660e01b81526004016109e19291906120f1565b6020604051808303815f875af11580156109fd573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610a219190612189565b905080610a965760405162461bcd60e51b815260206004820152602660248201527f4e6f7420656e6f75676820756e69717565204b4d5320696e707574207369676e60448201527f61747572657300000000000000000000000000000000000000000000000000006064820152608401610473565b505050610aa28861117d565b808681518110610ab457610ab461209f565b60200260200101518714610b0a5760405162461bcd60e51b815260206004820152601160248201527f57726f6e6720696e70757448616e646c650000000000000000000000000000006044820152606401610473565b5050505050610c2e565b5f865f81518110610b2757610b2761209f565b016020015160f81c9050818111610b705760405162461bcd60e51b815260206004820152600d60248201526c092dcecc2d8d2c840d2dcc8caf609b1b6044820152606401610473565b5f805b6020811015610bdb57610b8781601f6121a8565b610b929060086120c7565b8982610b9f8760206120c7565b610baa9060226120de565b610bb491906120de565b81518110610bc457610bc461209f565b016020015160f81c901b9190911790600101610b73565b50838114610c2b5760405162461bcd60e51b815260206004820152601160248201527f57726f6e6720696e70757448616e646c650000000000000000000000000000006044820152606401610473565b50505b50925050505b9392505050565b610c43611184565b610c4c8261123b565b610c568282611243565b5050565b5f610c63611317565b507f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc90565b610c90611360565b610c995f611392565b565b3380610ca5610f65565b6001600160a01b031614610cd75760405163118cdaa760e01b81526001600160a01b0382166004820152602401610473565b610ce081611392565b50565b5f60608082808083817fa16a46d94261c7517cc8ff89f61c0ce93598e3c849801011dee649a6a557d1008054909150158015610d2157506001810154155b610d6d5760405162461bcd60e51b815260206004820152601560248201527f4549503731323a20556e696e697469616c697a656400000000000000000000006044820152606401610473565b610d756113ca565b610d7d61149d565b604080515f80825260208201909252600f60f81b9c939b5091995046985030975095509350915050565b5f807f9016d09d72d40fdae2fd8ceac6b6234c7706214fd39c1cd1e609a0528c1993005b546001600160a01b031692915050565b60606040518060c00160405280608d81526020016123c7608d9139905090565b7ff0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a00805468010000000000000000810460ff16159067ffffffffffffffff165f81158015610e455750825b90505f8267ffffffffffffffff166001148015610e615750303b155b905081158015610e6f575080155b15610e8d5760405163f92ee8a960e01b815260040160405180910390fd5b845467ffffffffffffffff191660011785558315610ec157845468ff00000000000000001916680100000000000000001785555b610eca866114ee565b610f126040518060400160405280600d81526020016c24b7383aba2b32b934b334b2b960991b815250604051806040016040528060018152602001603160f81b8152506114ff565b8315610f5d57845468ff000000000000000019168555604051600181527fc7f505b2f371ae2175ee4913f4499e1f2633a7b5936321eed1cdaeb6115181d29060200160405180910390a15b505050505050565b5f807f237e158222e3e6968b72b9db0d8043aacf074ad9f650f0d1606b4d82ee432c00610dcb565b610f95611360565b7f237e158222e3e6968b72b9db0d8043aacf074ad9f650f0d1606b4d82ee432c0080546001600160a01b0319166001600160a01b0383169081178255610fd9610da7565b6001600160a01b03167f38d16b8cac22d99fc7c124b9cd0de2d3fa1faef420bfe791d8c362d765e2270060405160405180910390a35050565b60605f61101e83611511565b60010190505f8167ffffffffffffffff81111561103d5761103d611dc5565b6040519080825280601f01601f191660200182016040528015611067576020820181803683370190505b5090508181016020015b5f19017f3031323334353637383961626364656600000000000000000000000000000000600a86061a8153600a850494508461107157509392505050565b5f805f808585888a6040516020016110ca94939291906121bb565b60408051808303601f190181529190528051602090910120805c999098509650505050505050565b5f6110fc836115f3565b90505f61110982846116b6565b90506001600160a01b03811673c9990fefe0c27d31d0c2aa36196b085c0c4d456c146111775760405162461bcd60e51b815260206004820152601c60248201527f436f70726f636573736f722061646472657373206d69736d61746368000000006044820152606401610473565b50505050565b6001815d50565b306001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016148061121d57507f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03166112117f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc546001600160a01b031690565b6001600160a01b031614155b15610c995760405163703e46dd60e11b815260040160405180910390fd5b610ce0611360565b816001600160a01b03166352d1902d6040518163ffffffff1660e01b8152600401602060405180830381865afa92505050801561129d575060408051601f3d908101601f1916820190925261129a9181019061220c565b60015b6112c557604051634c9c8ce360e01b81526001600160a01b0383166004820152602401610473565b7f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc811461130857604051632a87526960e21b815260048101829052602401610473565b61131283836116de565b505050565b306001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001614610c995760405163703e46dd60e11b815260040160405180910390fd5b33611369610da7565b6001600160a01b031614610c995760405163118cdaa760e01b8152336004820152602401610473565b7f237e158222e3e6968b72b9db0d8043aacf074ad9f650f0d1606b4d82ee432c0080546001600160a01b0319168155610c5682611733565b7fa16a46d94261c7517cc8ff89f61c0ce93598e3c849801011dee649a6a557d10280546060917fa16a46d94261c7517cc8ff89f61c0ce93598e3c849801011dee649a6a557d1009161141b90612223565b80601f016020809104026020016040519081016040528092919081815260200182805461144790612223565b80156114925780601f1061146957610100808354040283529160200191611492565b820191905f5260205f20905b81548152906001019060200180831161147557829003601f168201915b505050505091505090565b7fa16a46d94261c7517cc8ff89f61c0ce93598e3c849801011dee649a6a557d10380546060917fa16a46d94261c7517cc8ff89f61c0ce93598e3c849801011dee649a6a557d1009161141b90612223565b6114f66117a3565b610ce0816117f1565b6115076117a3565b610c568282611822565b5f807a184f03e93ff9f4daa797ed6e38ed64bf6a1f0100000000000000008310611559577a184f03e93ff9f4daa797ed6e38ed64bf6a1f010000000000000000830492506040015b6d04ee2d6d415b85acef81000000008310611585576d04ee2d6d415b85acef8100000000830492506020015b662386f26fc1000083106115a357662386f26fc10000830492506010015b6305f5e10083106115bb576305f5e100830492506008015b61271083106115cf57612710830492506004015b606483106115e1576064830492506002015b600a83106115ed576001015b92915050565b5f6115ed6040518060c00160405280608d81526020016123c7608d913980519060200120835f015184602001518560400151604051602001611635919061225b565b604051602081830303815290604052805190602001208660600151876080015160405160200161169b969594939291909586526001600160a01b03948516602087015260408601939093526060850191909152821660808401521660a082015260c00190565b60405160208183030381529060405280519060200120611894565b5f805f806116c486866118c0565b9250925092506116d48282611909565b5090949350505050565b6116e7826119c1565b6040516001600160a01b038316907fbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b905f90a280511561172b576113128282611a37565b610c56611aa9565b7f9016d09d72d40fdae2fd8ceac6b6234c7706214fd39c1cd1e609a0528c19930080546001600160a01b031981166001600160a01b03848116918217845560405192169182907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0905f90a3505050565b7ff0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a005468010000000000000000900460ff16610c9957604051631afcd79f60e31b815260040160405180910390fd5b6117f96117a3565b6001600160a01b038116610cd757604051631e4fbdf760e01b81525f6004820152602401610473565b61182a6117a3565b7fa16a46d94261c7517cc8ff89f61c0ce93598e3c849801011dee649a6a557d1007fa16a46d94261c7517cc8ff89f61c0ce93598e3c849801011dee649a6a557d10261187684826122db565b506003810161188583826122db565b505f8082556001909101555050565b5f6115ed6118a0611ac8565b8360405161190160f01b8152600281019290925260228201526042902090565b5f805f83516041036118f7576020840151604085015160608601515f1a6118e988828585611ad6565b955095509550505050611902565b505081515f91506002905b9250925092565b5f82600381111561191c5761191c612397565b03611925575050565b600182600381111561193957611939612397565b036119575760405163f645eedf60e01b815260040160405180910390fd5b600282600381111561196b5761196b612397565b0361198c5760405163fce698f760e01b815260048101829052602401610473565b60038260038111156119a0576119a0612397565b03610c56576040516335e2f38360e21b815260048101829052602401610473565b806001600160a01b03163b5f036119f657604051634c9c8ce360e01b81526001600160a01b0382166004820152602401610473565b7f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc80546001600160a01b0319166001600160a01b0392909216919091179055565b60605f80846001600160a01b031684604051611a5391906123ab565b5f60405180830381855af49150503d805f8114611a8b576040519150601f19603f3d011682016040523d82523d5f602084013e611a90565b606091505b5091509150611aa0858383611b9e565b95945050505050565b3415610c995760405163b398979f60e01b815260040160405180910390fd5b5f611ad1611bfa565b905090565b5f80807f7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a0841115611b0f57505f91506003905082611b94565b604080515f808252602082018084528a905260ff891692820192909252606081018790526080810186905260019060a0016020604051602081039080840390855afa158015611b60573d5f803e3d5ffd5b5050604051601f1901519150506001600160a01b038116611b8b57505f925060019150829050611b94565b92505f91508190505b9450945094915050565b606082611bb357611bae82611c6d565b610c34565b8151158015611bca57506001600160a01b0384163b155b15611bf357604051639996b31560e01b81526001600160a01b0385166004820152602401610473565b5080610c34565b5f7f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f611c24611c96565b611c2c611d11565b60408051602081019490945283019190915260608201524660808201523060a082015260c00160405160208183030381529060405280519060200120905090565b805115611c7d5780518082602001fd5b60405163d6bda27560e01b815260040160405180910390fd5b5f7fa16a46d94261c7517cc8ff89f61c0ce93598e3c849801011dee649a6a557d10081611cc16113ca565b805190915015611cd957805160209091012092915050565b81548015611ce8579392505050565b7fc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470935050505090565b5f7fa16a46d94261c7517cc8ff89f61c0ce93598e3c849801011dee649a6a557d10081611d3c61149d565b805190915015611d5457805160209091012092915050565b60018201548015611ce8579392505050565b5f5b83811015611d80578181015183820152602001611d68565b50505f910152565b5f8151808452611d9f816020860160208601611d66565b601f01601f19169290920160200192915050565b602081525f610c346020830184611d88565b634e487b7160e01b5f52604160045260245ffd5b80356001600160a01b0381168114611def575f80fd5b919050565b5f82601f830112611e03575f80fd5b813567ffffffffffffffff80821115611e1e57611e1e611dc5565b604051601f8301601f19908116603f01168101908282118183101715611e4657611e46611dc5565b81604052838152866020858801011115611e5e575f80fd5b836020870160208301375f602085830101528094505050505092915050565b5f805f83850360a0811215611e90575f80fd5b6060811215611e9d575f80fd5b506040516060810167ffffffffffffffff8282108183111715611ec257611ec2611dc5565b81604052611ecf87611dd9565b8352611edd60208801611dd9565b6020840152611eee60408801611dd9565b60408401529194506060860135935060808601359180831115611f0f575f80fd5b5050611f1d86828701611df4565b9150509250925092565b5f8060408385031215611f38575f80fd5b611f4183611dd9565b9150602083013567ffffffffffffffff811115611f5c575f80fd5b611f6885828601611df4565b9150509250929050565b60ff60f81b881681525f602060e06020840152611f9260e084018a611d88565b8381036040850152611fa4818a611d88565b606085018990526001600160a01b038816608086015260a0850187905284810360c0860152855180825260208088019350909101905f5b81811015611ff757835183529284019291840191600101611fdb565b50909c9b505050505050505050505050565b5f60208284031215612019575f80fd5b610c3482611dd9565b5f8551612033818460208a01611d66565b61103b60f11b9083019081528551612052816002840160208a01611d66565b808201915050601760f91b8060028301528551612076816003850160208a01611d66565b60039201918201528351612091816004840160208801611d66565b016004019695505050505050565b634e487b7160e01b5f52603260045260245ffd5b634e487b7160e01b5f52601160045260245ffd5b80820281158282048414176115ed576115ed6120b3565b808201808211156115ed576115ed6120b3565b5f60a082016001600160a01b03808651168452602080870151602086015281604088015116604086015281606088015116606086015260a06080860152829150855180845260c08601925060c08160051b8701019350602087015f5b8281101561217b5760bf19888703018552612169868351611d88565b9550938301939083019060010161214d565b509398975050505050505050565b5f60208284031215612199575f80fd5b81518015158114610c34575f80fd5b818103818111156115ed576115ed6120b3565b5f6bffffffffffffffffffffffff19808760601b168352808660601b166014840152808560601b1660288401525082516121fc81603c850160208701611d66565b91909101603c0195945050505050565b5f6020828403121561221c575f80fd5b5051919050565b600181811c9082168061223757607f821691505b60208210810361225557634e487b7160e01b5f52602260045260245ffd5b50919050565b81515f9082906020808601845b8381101561228457815185529382019390820190600101612268565b50929695505050505050565b601f82111561131257805f5260205f20601f840160051c810160208510156122b55750805b601f840160051c820191505b818110156122d4575f81556001016122c1565b5050505050565b815167ffffffffffffffff8111156122f5576122f5611dc5565b612309816123038454612223565b84612290565b602080601f83116001811461233c575f84156123255750858301515b5f19600386901b1c1916600185901b178555610f5d565b5f85815260208120601f198616915b8281101561236a5788860151825594840194600190910190840161234b565b508582101561238757878501515f19600388901b60f8161c191681555b5050505050600190811b01905550565b634e487b7160e01b5f52602160045260245ffd5b5f82516123bc818460208701611d66565b919091019291505056fe43697068657274657874566572696669636174696f6e466f72436f70726f28616464726573732061636c416464726573732c6279746573333220686173684f66436970686572746578742c75696e743235365b5d2068616e646c65734c6973742c616464726573732075736572416464726573732c6164647265737320636f6e74726163744164647265737329a164736f6c6343000818000a";

type InputVerifierConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: InputVerifierConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class InputVerifier__factory extends ContractFactory {
  constructor(...args: InputVerifierConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      InputVerifier & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): InputVerifier__factory {
    return super.connect(runner) as InputVerifier__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): InputVerifierInterface {
    return new Interface(_abi) as InputVerifierInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): InputVerifier {
    return new Contract(address, _abi, runner) as unknown as InputVerifier;
  }
}
