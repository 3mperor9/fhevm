/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../../common";
import type {
  FHEPayment,
  FHEPaymentInterface,
} from "../../contracts/FHEPayment";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "AccountNotEnoughFunded",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "target",
        type: "address",
      },
    ],
    name: "AddressEmptyCode",
    type: "error",
  },
  {
    inputs: [],
    name: "AllContractsNotAuthorized",
    type: "error",
  },
  {
    inputs: [],
    name: "AlreadyAuthorizedAllContracts",
    type: "error",
  },
  {
    inputs: [],
    name: "AlreadyWhitelistedContract",
    type: "error",
  },
  {
    inputs: [],
    name: "CallerMustBeTFHEExecutorContract",
    type: "error",
  },
  {
    inputs: [],
    name: "ContractNotWhitelisted",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "implementation",
        type: "address",
      },
    ],
    name: "ERC1967InvalidImplementation",
    type: "error",
  },
  {
    inputs: [],
    name: "ERC1967NonPayable",
    type: "error",
  },
  {
    inputs: [],
    name: "FHEGasBlockLimitExceeded",
    type: "error",
  },
  {
    inputs: [],
    name: "FailedCall",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidInitialization",
    type: "error",
  },
  {
    inputs: [],
    name: "NotInitializing",
    type: "error",
  },
  {
    inputs: [],
    name: "OnlyScalarOperationsAreSupported",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "OwnableInvalidOwner",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "OwnableUnauthorizedAccount",
    type: "error",
  },
  {
    inputs: [],
    name: "RecoveryFailed",
    type: "error",
  },
  {
    inputs: [],
    name: "UUPSUnauthorizedCallContext",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "slot",
        type: "bytes32",
      },
    ],
    name: "UUPSUnsupportedProxiableUUID",
    type: "error",
  },
  {
    inputs: [],
    name: "UnsupportedOperation",
    type: "error",
  },
  {
    inputs: [],
    name: "WithdrawalFailed",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint64",
        name: "version",
        type: "uint64",
      },
    ],
    name: "Initialized",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferStarted",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "implementation",
        type: "address",
      },
    ],
    name: "Upgraded",
    type: "event",
  },
  {
    inputs: [],
    name: "UPGRADE_INTERFACE_VERSION",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "acceptOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "authorizeAllContracts",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "becomeTransientSpender",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "depositETH",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "didAuthorizeAllContracts",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        internalType: "address",
        name: "dappContract",
        type: "address",
      },
    ],
    name: "didWhitelistContract",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "getAvailableDepositsETH",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getClaimableUsedFHEGas",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getTFHEExecutorAddress",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getVersion",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "initialOwner",
        type: "address",
      },
    ],
    name: "initialize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "payer",
        type: "address",
      },
      {
        internalType: "uint8",
        name: "resultType",
        type: "uint8",
      },
    ],
    name: "payForCast",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "payer",
        type: "address",
      },
      {
        internalType: "uint8",
        name: "resultType",
        type: "uint8",
      },
      {
        internalType: "bytes1",
        name: "scalarByte",
        type: "bytes1",
      },
    ],
    name: "payForFheAdd",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "payer",
        type: "address",
      },
      {
        internalType: "uint8",
        name: "resultType",
        type: "uint8",
      },
      {
        internalType: "bytes1",
        name: "scalarByte",
        type: "bytes1",
      },
    ],
    name: "payForFheBitAnd",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "payer",
        type: "address",
      },
      {
        internalType: "uint8",
        name: "resultType",
        type: "uint8",
      },
      {
        internalType: "bytes1",
        name: "scalarByte",
        type: "bytes1",
      },
    ],
    name: "payForFheBitOr",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "payer",
        type: "address",
      },
      {
        internalType: "uint8",
        name: "resultType",
        type: "uint8",
      },
      {
        internalType: "bytes1",
        name: "scalarByte",
        type: "bytes1",
      },
    ],
    name: "payForFheBitXor",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "payer",
        type: "address",
      },
      {
        internalType: "uint8",
        name: "resultType",
        type: "uint8",
      },
      {
        internalType: "bytes1",
        name: "scalarByte",
        type: "bytes1",
      },
    ],
    name: "payForFheDiv",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "payer",
        type: "address",
      },
      {
        internalType: "uint8",
        name: "resultType",
        type: "uint8",
      },
      {
        internalType: "bytes1",
        name: "scalarByte",
        type: "bytes1",
      },
    ],
    name: "payForFheEq",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "payer",
        type: "address",
      },
      {
        internalType: "uint8",
        name: "resultType",
        type: "uint8",
      },
      {
        internalType: "bytes1",
        name: "scalarByte",
        type: "bytes1",
      },
    ],
    name: "payForFheGe",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "payer",
        type: "address",
      },
      {
        internalType: "uint8",
        name: "resultType",
        type: "uint8",
      },
      {
        internalType: "bytes1",
        name: "scalarByte",
        type: "bytes1",
      },
    ],
    name: "payForFheGt",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "payer",
        type: "address",
      },
      {
        internalType: "uint8",
        name: "resultType",
        type: "uint8",
      },
      {
        internalType: "bytes1",
        name: "scalarByte",
        type: "bytes1",
      },
    ],
    name: "payForFheLe",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "payer",
        type: "address",
      },
      {
        internalType: "uint8",
        name: "resultType",
        type: "uint8",
      },
      {
        internalType: "bytes1",
        name: "scalarByte",
        type: "bytes1",
      },
    ],
    name: "payForFheLt",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "payer",
        type: "address",
      },
      {
        internalType: "uint8",
        name: "resultType",
        type: "uint8",
      },
      {
        internalType: "bytes1",
        name: "scalarByte",
        type: "bytes1",
      },
    ],
    name: "payForFheMax",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "payer",
        type: "address",
      },
      {
        internalType: "uint8",
        name: "resultType",
        type: "uint8",
      },
      {
        internalType: "bytes1",
        name: "scalarByte",
        type: "bytes1",
      },
    ],
    name: "payForFheMin",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "payer",
        type: "address",
      },
      {
        internalType: "uint8",
        name: "resultType",
        type: "uint8",
      },
      {
        internalType: "bytes1",
        name: "scalarByte",
        type: "bytes1",
      },
    ],
    name: "payForFheMul",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "payer",
        type: "address",
      },
      {
        internalType: "uint8",
        name: "resultType",
        type: "uint8",
      },
      {
        internalType: "bytes1",
        name: "scalarByte",
        type: "bytes1",
      },
    ],
    name: "payForFheNe",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "payer",
        type: "address",
      },
      {
        internalType: "uint8",
        name: "resultType",
        type: "uint8",
      },
    ],
    name: "payForFheNeg",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "payer",
        type: "address",
      },
      {
        internalType: "uint8",
        name: "resultType",
        type: "uint8",
      },
    ],
    name: "payForFheNot",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "payer",
        type: "address",
      },
      {
        internalType: "uint8",
        name: "resultType",
        type: "uint8",
      },
    ],
    name: "payForFheRand",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "payer",
        type: "address",
      },
      {
        internalType: "uint8",
        name: "resultType",
        type: "uint8",
      },
    ],
    name: "payForFheRandBounded",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "payer",
        type: "address",
      },
      {
        internalType: "uint8",
        name: "resultType",
        type: "uint8",
      },
      {
        internalType: "bytes1",
        name: "scalarByte",
        type: "bytes1",
      },
    ],
    name: "payForFheRem",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "payer",
        type: "address",
      },
      {
        internalType: "uint8",
        name: "resultType",
        type: "uint8",
      },
      {
        internalType: "bytes1",
        name: "scalarByte",
        type: "bytes1",
      },
    ],
    name: "payForFheRotl",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "payer",
        type: "address",
      },
      {
        internalType: "uint8",
        name: "resultType",
        type: "uint8",
      },
      {
        internalType: "bytes1",
        name: "scalarByte",
        type: "bytes1",
      },
    ],
    name: "payForFheRotr",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "payer",
        type: "address",
      },
      {
        internalType: "uint8",
        name: "resultType",
        type: "uint8",
      },
      {
        internalType: "bytes1",
        name: "scalarByte",
        type: "bytes1",
      },
    ],
    name: "payForFheShl",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "payer",
        type: "address",
      },
      {
        internalType: "uint8",
        name: "resultType",
        type: "uint8",
      },
      {
        internalType: "bytes1",
        name: "scalarByte",
        type: "bytes1",
      },
    ],
    name: "payForFheShr",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "payer",
        type: "address",
      },
      {
        internalType: "uint8",
        name: "resultType",
        type: "uint8",
      },
      {
        internalType: "bytes1",
        name: "scalarByte",
        type: "bytes1",
      },
    ],
    name: "payForFheSub",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "payer",
        type: "address",
      },
      {
        internalType: "uint8",
        name: "resultType",
        type: "uint8",
      },
    ],
    name: "payForIfThenElse",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "payer",
        type: "address",
      },
      {
        internalType: "uint8",
        name: "resultType",
        type: "uint8",
      },
    ],
    name: "payForTrivialEncrypt",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "pendingOwner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "proxiableUUID",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "receiver",
        type: "address",
      },
    ],
    name: "recoverBurntFunds",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "removeAuthorizationAllContracts",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "dappContract",
        type: "address",
      },
    ],
    name: "removeWhitelistedContract",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "stopBeingTransientSpender",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newImplementation",
        type: "address",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "upgradeToAndCall",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "dappContract",
        type: "address",
      },
    ],
    name: "whitelistContract",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "receiver",
        type: "address",
      },
    ],
    name: "withdrawETH",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60a06040523060805234801562000014575f80fd5b506200001f62000025565b620000d9565b7ff0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a00805468010000000000000000900460ff1615620000765760405163f92ee8a960e01b815260040160405180910390fd5b80546001600160401b0390811614620000d65780546001600160401b0319166001600160401b0390811782556040519081527fc7f505b2f371ae2175ee4913f4499e1f2633a7b5936321eed1cdaeb6115181d29060200160405180910390a15b50565b608051612fa3620001005f395f818161265c0152818161268501526127ea0152612fa35ff3fe608060405260043610610324575f3560e01c806379ba5097116101a7578063b25fd547116100e7578063d5f0797d11610092578063e30c39781161006d578063e30c397814610802578063f2fde38b14610816578063f7eaec6314610835578063fee4975514610854575f80fd5b8063d5f0797d146107e3578063d692278314610328578063e138131e14610660575f80fd5b8063c4d66de8116100c2578063c4d66de8146107a5578063cd2bd00314610573578063cea14930146107c4575f80fd5b8063b25fd547146103e4578063bdb4401014610772578063bfc1f6d814610786575f80fd5b80639d53862811610152578063aa29aeec1161012d578063aa29aeec146106f7578063aa43b7f91461070b578063ad23361014610469578063ad3cb1cc1461072a575f80fd5b80639d5386281461069e5780639f6a0ed8146106b2578063a90cd91d146106d1575f80fd5b80638da5cb5b116101825780638da5cb5b1461063457806399841ed7146106605780639bf559211461067f575f80fd5b806379ba5097146106205780637da7e620146104e45780638638282b14610328575f80fd5b806327af38ad11610272578063473dceed1161021d578063577244bd116101f8578063577244bd146105b9578063715018a61461060c57806372d0e432146103e45780637300c0fa14610573575f80fd5b8063473dceed146105735780634f1ef2861461059257806352d1902d146105a5575f80fd5b806336118b521161024d57806336118b52146105355780633a0e6d4314610554578063466ac06514610328575f80fd5b806327af38ad146104e45780632be8dd79146105035780632d2da80614610522575f80fd5b806313f3d329116102d25780631db04264116102ad5780631db04264146104885780631f6f6aec146103e4578063262794d8146104a7575f80fd5b806313f3d329146103e45780631761d370146104035780631ade267d14610469575f80fd5b80630d8e6e2c116103025780630d8e6e2c1461037c5780630ff24ee2146103a6578063100747ad146103c5575f80fd5b806303eaf064146103285780630832968e146103495780630b332f441461035d575b5f80fd5b348015610333575f80fd5b50610347610342366004612c50565b610873565b005b348015610354575f80fd5b506103476109af565b348015610368575f80fd5b50610347610377366004612ca0565b610a26565b348015610387575f80fd5b50610390610b7a565b60405161039d9190612cf3565b60405180910390f35b3480156103b1575f80fd5b506103476103c0366004612d25565b610bf5565b3480156103d0575f80fd5b506103476103df366004612ca0565b610c96565b3480156103ef575f80fd5b506103476103fe366004612c50565b610de1565b34801561040e575f80fd5b5061045961041d366004612d25565b6001600160a01b03165f9081527f4c5af501c90907b9fb888b6dd79405547def38a1dc3110f42d77f5dbc3222e04602052604090205460ff1690565b604051901515815260200161039d565b348015610474575f80fd5b50610347610483366004612c50565b610f7b565b348015610493575f80fd5b506103476104a2366004612d25565b61111c565b3480156104b2575f80fd5b507f4c5af501c90907b9fb888b6dd79405547def38a1dc3110f42d77f5dbc3222e02545b60405190815260200161039d565b3480156104ef575f80fd5b506103476104fe366004612c50565b6111cf565b34801561050e575f80fd5b5061034761051d366004612c50565b6112de565b610347610530366004612d25565b61147f565b348015610540575f80fd5b5061034761054f366004612d3e565b6114dd565b34801561055f575f80fd5b5061034761056e366004612d25565b61159d565b34801561057e575f80fd5b5061034761058d366004612c50565b611642565b6103476105a0366004612d73565b611704565b3480156105b0575f80fd5b506104d661171f565b3480156105c4575f80fd5b506104d66105d3366004612d25565b6001600160a01b03165f9081527f4c5af501c90907b9fb888b6dd79405547def38a1dc3110f42d77f5dbc3222e03602052604090205490565b348015610617575f80fd5b5061034761174d565b34801561062b575f80fd5b50610347611760565b34801561063f575f80fd5b506106486117ad565b6040516001600160a01b03909116815260200161039d565b34801561066b575f80fd5b5061034761067a366004612c50565b6117e1565b34801561068a575f80fd5b50610347610699366004612ca0565b611963565b3480156106a9575f80fd5b50610347611a47565b3480156106bd575f80fd5b506103476106cc366004612ca0565b611a4c565b3480156106dc575f80fd5b5073596e6682c72946af006b27c131793f2b62527a4b610648565b348015610702575f80fd5b50610347611b2f565b348015610716575f80fd5b50610347610725366004612ca0565b611b34565b348015610735575f80fd5b506103906040518060400160405280600581526020017f352e302e3000000000000000000000000000000000000000000000000000000081525081565b34801561077d575f80fd5b50610347611c27565b348015610791575f80fd5b506103476107a0366004612c50565b611ca3565b3480156107b0575f80fd5b506103476107bf366004612d25565b611db5565b3480156107cf575f80fd5b506103476107de366004612ca0565b611ed7565b3480156107ee575f80fd5b506103476107fd366004612ca0565b611fc2565b34801561080d575f80fd5b50610648612117565b348015610821575f80fd5b50610347610830366004612d25565b61213f565b348015610840575f80fd5b5061034761084f366004612c50565b6121c4565b34801561085f575f80fd5b5061045961086e366004612e2f565b6122d6565b3373596e6682c72946af006b27c131793f2b62527a4b146108a7576040516378d178a160e01b815260040160405180910390fd5b6108af612324565b6001600160f81b03198116600160f81b0361098a578160ff166001036108e1576108dc8362011170612348565b6109a2565b8160ff166002036108f9576108dc8362014050612348565b8160ff16600303610911576108dc8362019a28612348565b8160ff16600403610929576108dc836201f400612348565b8160ff16600503610941576108dc8362026160612348565b8160ff16600603610959576108dc836202e630612348565b8160ff16600803610971576108dc8362038658612348565b604051639ba6061b60e01b815260040160405180910390fd5b8160ff166001036108e1576108dc8362011170612348565b6109aa61252f565b505050565b335f9081527f4c5af501c90907b9fb888b6dd79405547def38a1dc3110f42d77f5dbc3222e0460205260409020545f80516020612f778339815191529060ff16610a0b57604051621c262560e81b815260040160405180910390fd5b335f908152600490910160205260409020805460ff19169055565b3373596e6682c72946af006b27c131793f2b62527a4b14610a5a576040516378d178a160e01b815260040160405180910390fd5b610a62612324565b8060ff165f03610a7e57610a7982620186a0612348565b610b6e565b8060ff16600103610a9657610a7982620186a0612348565b8060ff16600203610aae57610a7982620186a0612348565b8060ff16600303610ac657610a7982620186a0612348565b8060ff16600403610ade57610a7982620186a0612348565b8060ff16600503610af657610a7982620186a0612348565b8060ff16600603610b0e57610a7982620186a0612348565b8060ff16600803610b2657610a7982620186a0612348565b8060ff16600903610b3e57610a798262030d40612348565b8060ff16600a03610b5657610a7982620493e0612348565b8060ff16600b0361097157610a798262061a80612348565b610b7661252f565b5050565b60606040518060400160405280600a81526020017f4648455061796d656e7400000000000000000000000000000000000000000000815250610bbb5f612582565b610bc56001612582565b610bce5f612582565b604051602001610be19493929190612e57565b604051602081830303815290604052905090565b335f9081527f4c5af501c90907b9fb888b6dd79405547def38a1dc3110f42d77f5dbc3222e05602090815260408083206001600160a01b03851684529091529020545f80516020612f778339815191529060ff16610c6657604051632ff3629f60e21b815260040160405180910390fd5b335f9081526005909101602090815260408083206001600160a01b0394909416835292905220805460ff19169055565b3373596e6682c72946af006b27c131793f2b62527a4b14610cca576040516378d178a160e01b815260040160405180910390fd5b610cd2612324565b8060ff165f03610ce757610a79826064612348565b8060ff16600103610cfd57610a79826064612348565b8060ff16600203610d1357610a79826064612348565b8060ff16600303610d2957610a798260c8612348565b8060ff16600403610d4057610a798261012c612348565b8060ff16600503610d5757610a7982610258612348565b8060ff16600603610d6e57610a798261028a612348565b8060ff16600703610d8557610a79826102bc612348565b8060ff16600803610d9c57610a7982610320612348565b8060ff16600903610db357610a7982610640612348565b8060ff16600a03610dca57610a7982610c80612348565b8060ff16600b0361097157610a7982611900612348565b3373596e6682c72946af006b27c131793f2b62527a4b14610e15576040516378d178a160e01b815260040160405180910390fd5b610e1d612324565b6001600160f81b03198116600160f81b03610ed3578160ff16600103610e49576108dc836188b8612348565b8160ff16600203610e60576108dc836188b8612348565b8160ff16600303610e77576108dc836188b8612348565b8160ff16600403610e8e576108dc836188b8612348565b8160ff16600503610ea5576108dc83619470612348565b8160ff16600603610ebc576108dc8361a028612348565b8160ff16600803610971576108dc8361abe0612348565b8160ff16600103610eeb576108dc836201c520612348565b8160ff16600203610f03576108dc8362020788612348565b8160ff16600303610f1b576108dc83620255a8612348565b8160ff16600403610f33576108dc836202cad8612348565b8160ff16600503610f4b576108dc83620376b8612348565b8160ff16600603610f63576108dc8362044d90612348565b8160ff16600803610971576108dc8362055730612348565b3373596e6682c72946af006b27c131793f2b62527a4b14610faf576040516378d178a160e01b815260040160405180910390fd5b610fb7612324565b6001600160f81b03198116600160f81b03611074578160ff16600103610fe4576108dc836201d8a8612348565b8160ff16600203610ffc576108dc836201f400612348565b8160ff16600303611014576108dc83620249f0612348565b8160ff1660040361102c576108dc83620280a0612348565b8160ff16600503611044576108dc836202ee00612348565b8160ff1660060361105c576108dc8362036ee8612348565b8160ff16600803610971576108dc8362040740612348565b8160ff1660010361108c576108dc836201d8a8612348565b8160ff166002036110a4576108dc836201f400612348565b8160ff166003036110bc576108dc83620255a8612348565b8160ff166004036110d4576108dc836202cad8612348565b8160ff166005036110ec576108dc8362033450612348565b8160ff16600603611104576108dc836203ad68612348565b8160ff16600803610971576108dc8362043a08612348565b61112461261f565b7f4c5af501c90907b9fb888b6dd79405547def38a1dc3110f42d77f5dbc3222e0280545f918290556040515f80516020612f7783398151915292906001600160a01b0385169083908381818185875af1925050503d805f81146111a2576040519150601f19603f3d011682016040523d82523d5f602084013e6111a7565b606091505b50509050806111c95760405163a4b6690960e01b815260040160405180910390fd5b50505050565b3373596e6682c72946af006b27c131793f2b62527a4b14611203576040516378d178a160e01b815260040160405180910390fd5b61120b612324565b6001600160f81b03198116600160f81b036112c7578160ff16600103611237576108dc8361fde8612348565b8160ff1660020361124f576108dc8362016f30612348565b8160ff16600303611267576108dc8362020788612348565b8160ff1660040361127f576108dc83620278d0612348565b8160ff16600503611297576108dc836202de60612348565b8160ff166006036112af576108dc8362035390612348565b8160ff16600803610971576108dc836203dc48612348565b8160ff16600103611237576108dc8361fde8612348565b3373596e6682c72946af006b27c131793f2b62527a4b14611312576040516378d178a160e01b815260040160405180910390fd5b61131a612324565b6001600160f81b03198116600160f81b036113d7578160ff16600103611347576108dc83620157c0612348565b8160ff1660020361135f576108dc8362026d18612348565b8160ff16600303611377576108dc8362032c80612348565b8160ff1660040361138f576108dc8362040740612348565b8160ff166005036113a7576108dc8362056ea0612348565b8160ff166006036113bf576108dc8362075300612348565b8160ff16600803610971576108dc836209df58612348565b8160ff166001036113ef576108dc83620249f0612348565b8160ff16600203611407576108dc8362030188612348565b8160ff1660030361141f576108dc836203ff70612348565b8160ff16600403611437576108dc8362057a58612348565b8160ff1660050361144f576108dc836209c7e8612348565b8160ff16600603611467576108dc83621178a8612348565b8160ff16600803610971576108dc83621f3448612348565b6001600160a01b0381165f9081527f4c5af501c90907b9fb888b6dd79405547def38a1dc3110f42d77f5dbc3222e036020526040812080545f80516020612f77833981519152923492916114d4908490612ee8565b90915550505050565b335f9081527f4c5af501c90907b9fb888b6dd79405547def38a1dc3110f42d77f5dbc3222e036020526040812080545f80516020612f7783398151915292859291611529908490612efb565b90915550506040515f906001600160a01b0384169085908381818185875af1925050503d805f8114611576576040519150601f19603f3d011682016040523d82523d5f602084013e61157b565b606091505b50509050806111c9576040516327fcd9d160e01b815260040160405180910390fd5b335f9081527f4c5af501c90907b9fb888b6dd79405547def38a1dc3110f42d77f5dbc3222e05602090815260408083206001600160a01b03851684529091529020545f80516020612f778339815191529060ff161561160f57604051639ad3410b60e01b815260040160405180910390fd5b335f9081526005909101602090815260408083206001600160a01b0394909416835292905220805460ff19166001179055565b3373596e6682c72946af006b27c131793f2b62527a4b14611676576040516378d178a160e01b815260040160405180910390fd5b61167e612324565b6001600160f81b03198116600160f81b036116ee578160ff165f036116a9576108dc83616590612348565b8160ff166001036116c0576108dc83617d00612348565b8160ff166002036116d7576108dc836184d0612348565b8160ff16600303610e77576108dc836184d0612348565b8160ff165f036116a9576108dc83616590612348565b61170c612651565b61171582612708565b610b768282612710565b5f6117286127df565b507f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc90565b61175561261f565b61175e5f612828565b565b338061176a612117565b6001600160a01b0316146117a15760405163118cdaa760e01b81526001600160a01b03821660048201526024015b60405180910390fd5b6117aa81612828565b50565b5f807f9016d09d72d40fdae2fd8ceac6b6234c7706214fd39c1cd1e609a0528c1993005b546001600160a01b031692915050565b3373596e6682c72946af006b27c131793f2b62527a4b14611815576040516378d178a160e01b815260040160405180910390fd5b61181d612324565b6001600160f81b03198116600160f81b0361194d578160ff165f03611848576108dc8361bf68612348565b8160ff1660010361185f576108dc8361c738612348565b8160ff16600203611876576108dc8361cf08612348565b8160ff1660030361188d576108dc8361d2f0612348565b8160ff166004036118a5576108dc8362014050612348565b8160ff166005036118bd576108dc8362014ff0612348565b8160ff166006036118d5576108dc83620157c0612348565b8160ff166007036118ed576108dc8362015f90612348565b8160ff16600803611905576108dc83620186a0612348565b8160ff1660090361191d576108dc83620249f0612348565b8160ff16600a03611935576108dc8362030d40612348565b8160ff16600b03610971576108dc83620493e0612348565b8160ff165f03611848576108dc8361bf68612348565b3373596e6682c72946af006b27c131793f2b62527a4b14611997576040516378d178a160e01b815260040160405180910390fd5b61199f612324565b8060ff166001036119b757610a7982620186a0612348565b8060ff166002036119cf57610a7982620186a0612348565b8060ff166003036119e757610a7982620186a0612348565b8060ff166004036119ff57610a7982620186a0612348565b8060ff16600503611a1757610a7982620186a0612348565b8060ff16600603611a2f57610a7982620186a0612348565b8060ff1660080361097157610a7982620186a0612348565b335f5d565b3373596e6682c72946af006b27c131793f2b62527a4b14611a80576040516378d178a160e01b815260040160405180910390fd5b611a88612324565b8060ff16600103611a9f57610a798261ea60612348565b8060ff16600203611ab757610a798262017318612348565b8060ff16600303611acf57610a79826201ffb8612348565b8060ff16600403611ae757610a798262027100612348565b8060ff16600503611aff57610a798262030958612348565b8060ff16600603611b1757610a79826203c8c0612348565b8060ff1660080361097157610a79826204b708612348565b5f805d565b3373596e6682c72946af006b27c131793f2b62527a4b14611b68576040516378d178a160e01b815260040160405180910390fd5b611b70612324565b8060ff165f03611b8657610a7982617530612348565b8060ff16600103611b9d57610a79826180e8612348565b8060ff16600203611bb457610a79826184d0612348565b8060ff16600303611bcb57610a79826188b8612348565b8060ff16600403611be257610a7982618ca0612348565b8060ff16600503611bf957610a7982619088612348565b8060ff16600603611c1057610a7982619470612348565b8060ff1660080361097157610a7982619858612348565b335f9081527f4c5af501c90907b9fb888b6dd79405547def38a1dc3110f42d77f5dbc3222e0460205260409020545f80516020612f778339815191529060ff1615611c8557604051635f2223a360e11b815260040160405180910390fd5b335f908152600490910160205260409020805460ff19166001179055565b3373596e6682c72946af006b27c131793f2b62527a4b14611cd7576040516378d178a160e01b815260040160405180910390fd5b611cdf612324565b600160f81b6001600160f81b0319821614611d0d57604051636aa9eb0560e01b815260040160405180910390fd5b8160ff16600103611d25576108dc8362045d30612348565b8160ff16600203611d3d576108dc83620704e0612348565b8160ff16600303611d55576108dc8362097db0612348565b8160ff16600403611d6d576108dc83620c4888612348565b8160ff16600503611d85576108dc836210b558612348565b8160ff16600603611d9d576108dc836216df78612348565b8160ff16600803610971576108dc83621f4fa0612348565b7ff0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a00805468010000000000000000810460ff16159067ffffffffffffffff165f81158015611dff5750825b90505f8267ffffffffffffffff166001148015611e1b5750303b155b905081158015611e29575080155b15611e475760405163f92ee8a960e01b815260040160405180910390fd5b845467ffffffffffffffff191660011785558315611e7b57845468ff00000000000000001916680100000000000000001785555b611e8486612860565b8315611ecf57845468ff000000000000000019168555604051600181527fc7f505b2f371ae2175ee4913f4499e1f2633a7b5936321eed1cdaeb6115181d29060200160405180910390a15b505050505050565b3373596e6682c72946af006b27c131793f2b62527a4b14611f0b576040516378d178a160e01b815260040160405180910390fd5b611f13612324565b8060ff165f03611f2857610a798260c8612348565b8060ff16600103611f3e57610a798260c8612348565b8060ff16600203611f5457610a798260c8612348565b8060ff16600303611f6a57610a798260c8612348565b8060ff16600403611f8057610a798260c8612348565b8060ff16600503611f9657610a798260c8612348565b8060ff16600603611fac57610a798260c8612348565b8060ff1660080361097157610a798260c8612348565b3373596e6682c72946af006b27c131793f2b62527a4b14611ff6576040516378d178a160e01b815260040160405180910390fd5b611ffe612324565b8060ff165f0361201457610a798261a7f8612348565b8060ff1660010361202b57610a798261afc8612348565b8060ff1660020361204257610a798261b798612348565b8060ff1660030361205957610a798261b798612348565b8060ff1660040361207057610a798261c350612348565b8060ff1660050361208757610a798261cf08612348565b8060ff1660060361209f57610a798262011170612348565b8060ff166007036120b757610a798262013880612348565b8060ff166008036120cf57610a798262015f90612348565b8060ff166009036120e757610a7982620249f0612348565b8060ff16600a036120ff57610a798262030d40612348565b8060ff16600b0361097157610a7982620493e0612348565b5f807f237e158222e3e6968b72b9db0d8043aacf074ad9f650f0d1606b4d82ee432c006117d1565b61214761261f565b7f237e158222e3e6968b72b9db0d8043aacf074ad9f650f0d1606b4d82ee432c0080546001600160a01b0319166001600160a01b038316908117825561218b6117ad565b6001600160a01b03167f38d16b8cac22d99fc7c124b9cd0de2d3fa1faef420bfe791d8c362d765e2270060405160405180910390a35050565b3373596e6682c72946af006b27c131793f2b62527a4b146121f8576040516378d178a160e01b815260040160405180910390fd5b612200612324565b600160f81b6001600160f81b031982161461222e57604051636aa9eb0560e01b815260040160405180910390fd5b8160ff16600103612246576108dc8362021ef8612348565b8160ff1660020361225e576108dc836203a1b0612348565b8160ff16600303612276576108dc836204ca90612348565b8160ff1660040361228e576108dc83620612b0612348565b8160ff166005036122a6576108dc836208e940612348565b8160ff166006036122be576108dc83620d13a8612348565b8160ff16600803610971576108dc8362133210612348565b6001600160a01b038281165f9081527f4c5af501c90907b9fb888b6dd79405547def38a1dc3110f42d77f5dbc3222e05602090815260408083209385168352929052205460ff165b92915050565b5f80516020612f7783398151915280544390811115610b765781555f600190910155565b5f80516020612f778339815191525f620f4240612365823a612f0e565b61236f9190612f25565b90505f80821161237f575f612381565b815b90505f61238e8583612f0e565b6001600160a01b0387165f908152600386016020526040902054909150808211156124d4575f5c6001600160a01b038116156123ca57806123cc565b325b6001600160a01b0381165f90815260048801602052604090205490915060ff168061241d57506001600160a01b038082165f9081526005880160209081526040808320938c168352929052205460ff165b156124b5576001600160a01b0381165f9081526003870160205260409020548084111561245d5760405163ba2b1f1560e01b815260040160405180910390fd5b6001600160a01b0382165f908152600388016020526040812085830390556001880180548a929061248f908490612ee8565b9250508190555083876002015f8282546124a99190612ee8565b909155506124ce915050565b60405163ba2b1f1560e01b815260040160405180910390fd5b50612526565b6001600160a01b0387165f90815260038601602052604081208383039055600186018054889290612506908490612ee8565b9250508190555081856002015f8282546125209190612ee8565b90915550505b50505050505050565b7f4c5af501c90907b9fb888b6dd79405547def38a1dc3110f42d77f5dbc3222e01545f80516020612f778339815191529062989680116117aa5760405163964fa5eb60e01b815260040160405180910390fd5b60605f61258e83612871565b60010190505f8167ffffffffffffffff8111156125ad576125ad612d5f565b6040519080825280601f01601f1916602001820160405280156125d7576020820181803683370190505b5090508181016020015b5f19017f3031323334353637383961626364656600000000000000000000000000000000600a86061a8153600a85049450846125e157509392505050565b336126286117ad565b6001600160a01b03161461175e5760405163118cdaa760e01b8152336004820152602401611798565b306001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001614806126ea57507f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03166126de7f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc546001600160a01b031690565b6001600160a01b031614155b1561175e5760405163703e46dd60e11b815260040160405180910390fd5b6117aa61261f565b816001600160a01b03166352d1902d6040518163ffffffff1660e01b8152600401602060405180830381865afa92505050801561276a575060408051601f3d908101601f1916820190925261276791810190612f44565b60015b61279257604051634c9c8ce360e01b81526001600160a01b0383166004820152602401611798565b7f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc81146127d557604051632a87526960e21b815260048101829052602401611798565b6109aa8383612952565b306001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000161461175e5760405163703e46dd60e11b815260040160405180910390fd5b7f237e158222e3e6968b72b9db0d8043aacf074ad9f650f0d1606b4d82ee432c0080546001600160a01b0319168155610b76826129a7565b612868612a17565b6117aa81612a65565b5f807a184f03e93ff9f4daa797ed6e38ed64bf6a1f01000000000000000083106128b9577a184f03e93ff9f4daa797ed6e38ed64bf6a1f010000000000000000830492506040015b6d04ee2d6d415b85acef810000000083106128e5576d04ee2d6d415b85acef8100000000830492506020015b662386f26fc10000831061290357662386f26fc10000830492506010015b6305f5e100831061291b576305f5e100830492506008015b612710831061292f57612710830492506004015b60648310612941576064830492506002015b600a831061231e5760010192915050565b61295b82612a96565b6040516001600160a01b038316907fbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b905f90a280511561299f576109aa8282612b0c565b610b76612b7e565b7f9016d09d72d40fdae2fd8ceac6b6234c7706214fd39c1cd1e609a0528c19930080546001600160a01b031981166001600160a01b03848116918217845560405192169182907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0905f90a3505050565b7ff0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a005468010000000000000000900460ff1661175e57604051631afcd79f60e31b815260040160405180910390fd5b612a6d612a17565b6001600160a01b0381166117a157604051631e4fbdf760e01b81525f6004820152602401611798565b806001600160a01b03163b5f03612acb57604051634c9c8ce360e01b81526001600160a01b0382166004820152602401611798565b7f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc80546001600160a01b0319166001600160a01b0392909216919091179055565b60605f80846001600160a01b031684604051612b289190612f5b565b5f60405180830381855af49150503d805f8114612b60576040519150601f19603f3d011682016040523d82523d5f602084013e612b65565b606091505b5091509150612b75858383612b9d565b95945050505050565b341561175e5760405163b398979f60e01b815260040160405180910390fd5b606082612bb257612bad82612bfc565b612bf5565b8151158015612bc957506001600160a01b0384163b155b15612bf257604051639996b31560e01b81526001600160a01b0385166004820152602401611798565b50805b9392505050565b805115612c0c5780518082602001fd5b60405163d6bda27560e01b815260040160405180910390fd5b80356001600160a01b0381168114612c3b575f80fd5b919050565b803560ff81168114612c3b575f80fd5b5f805f60608486031215612c62575f80fd5b612c6b84612c25565b9250612c7960208501612c40565b915060408401356001600160f81b031981168114612c95575f80fd5b809150509250925092565b5f8060408385031215612cb1575f80fd5b612cba83612c25565b9150612cc860208401612c40565b90509250929050565b5f5b83811015612ceb578181015183820152602001612cd3565b50505f910152565b602081525f8251806020840152612d11816040850160208701612cd1565b601f01601f19169190910160400192915050565b5f60208284031215612d35575f80fd5b612bf582612c25565b5f8060408385031215612d4f575f80fd5b82359150612cc860208401612c25565b634e487b7160e01b5f52604160045260245ffd5b5f8060408385031215612d84575f80fd5b612d8d83612c25565b9150602083013567ffffffffffffffff80821115612da9575f80fd5b818501915085601f830112612dbc575f80fd5b813581811115612dce57612dce612d5f565b604051601f8201601f19908116603f01168101908382118183101715612df657612df6612d5f565b81604052828152886020848701011115612e0e575f80fd5b826020860160208301375f6020848301015280955050505050509250929050565b5f8060408385031215612e40575f80fd5b612e4983612c25565b9150612cc860208401612c25565b5f8551612e68818460208a01612cd1565b61103b60f11b9083019081528551612e87816002840160208a01612cd1565b808201915050601760f91b8060028301528551612eab816003850160208a01612cd1565b60039201918201528351612ec6816004840160208801612cd1565b016004019695505050505050565b634e487b7160e01b5f52601160045260245ffd5b8082018082111561231e5761231e612ed4565b8181038181111561231e5761231e612ed4565b808202811582820484141761231e5761231e612ed4565b5f82612f3f57634e487b7160e01b5f52601260045260245ffd5b500490565b5f60208284031215612f54575f80fd5b5051919050565b5f8251612f6c818460208701612cd1565b919091019291505056fe4c5af501c90907b9fb888b6dd79405547def38a1dc3110f42d77f5dbc3222e00a164736f6c6343000818000a";

type FHEPaymentConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: FHEPaymentConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class FHEPayment__factory extends ContractFactory {
  constructor(...args: FHEPaymentConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      FHEPayment & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): FHEPayment__factory {
    return super.connect(runner) as FHEPayment__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): FHEPaymentInterface {
    return new Interface(_abi) as FHEPaymentInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): FHEPayment {
    return new Contract(address, _abi, runner) as unknown as FHEPayment;
  }
}
