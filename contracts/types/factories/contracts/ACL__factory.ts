/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../../common";
import type { ACL, ACLInterface } from "../../contracts/ACL";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "target",
        type: "address",
      },
    ],
    name: "AddressEmptyCode",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "implementation",
        type: "address",
      },
    ],
    name: "ERC1967InvalidImplementation",
    type: "error",
  },
  {
    inputs: [],
    name: "ERC1967NonPayable",
    type: "error",
  },
  {
    inputs: [],
    name: "FailedCall",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidInitialization",
    type: "error",
  },
  {
    inputs: [],
    name: "NotInitializing",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "OwnableInvalidOwner",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "OwnableUnauthorizedAccount",
    type: "error",
  },
  {
    inputs: [],
    name: "UUPSUnauthorizedCallContext",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "slot",
        type: "bytes32",
      },
    ],
    name: "UUPSUnsupportedProxiableUUID",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256[]",
        name: "handlesList",
        type: "uint256[]",
      },
    ],
    name: "AllowedForDecryption",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint64",
        name: "version",
        type: "uint64",
      },
    ],
    name: "Initialized",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "delegatee",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "contractAddress",
        type: "address",
      },
    ],
    name: "NewDelegation",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferStarted",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "implementation",
        type: "address",
      },
    ],
    name: "Upgraded",
    type: "event",
  },
  {
    inputs: [],
    name: "UPGRADE_INTERFACE_VERSION",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "acceptOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "handle",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "allow",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256[]",
        name: "handlesList",
        type: "uint256[]",
      },
    ],
    name: "allowForDecryption",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "handle",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "allowTransient",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "delegatee",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "handle",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "contractAddress",
        type: "address",
      },
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "allowedOnBehalf",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "handle",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "allowedTransient",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "cleanTransientStorage",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "delegatee",
        type: "address",
      },
      {
        internalType: "address",
        name: "contractAddress",
        type: "address",
      },
    ],
    name: "delegateAccountForContract",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "getTFHEExecutorAddress",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getVersion",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "initialOwner",
        type: "address",
      },
    ],
    name: "initialize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "handle",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "isAllowed",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "handle",
        type: "uint256",
      },
    ],
    name: "isAllowedForDecryption",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "pendingOwner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "handle",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "persistAllowed",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "proxiableUUID",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newImplementation",
        type: "address",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "upgradeToAndCall",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60a060405230608052348015610013575f80fd5b5061001c610021565b6100d3565b7ff0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a00805468010000000000000000900460ff16156100715760405163f92ee8a960e01b815260040160405180910390fd5b80546001600160401b03908116146100d05780546001600160401b0319166001600160401b0390811782556040519081527fc7f505b2f371ae2175ee4913f4499e1f2633a7b5936321eed1cdaeb6115181d29060200160405180910390a15b50565b60805161179d6100f95f395f8181610dd001528181610df90152610f5e015261179d5ff3fe608060405260043610610162575f3560e01c806379ba5097116100c6578063ad3cb1cc1161007c578063ccd9a7cd11610057578063ccd9a7cd14610436578063e30c397814610455578063f2fde38b14610469575f80fd5b8063ad3cb1cc146103b0578063b198d657146103f8578063c4d66de814610417575f80fd5b80638d9c9c92116100ac5780638d9c9c921461033f5780638da5cb5b1461035e578063a90cd91d1461038a575f80fd5b806379ba50971461030c5780637a9a598e14610320575f80fd5b8063557e10041161011b5780636330a709116101015780636330a7091461028c57806365d0509c146102d9578063715018a6146102f8575f80fd5b8063557e10041461024e5780635faa299a1461026d575f80fd5b806337e6b44f1161014b57806337e6b44f146101a65780634f1ef2861461021957806352d1902d1461022c575f80fd5b80630d8e6e2c1461016657806335334c2314610190575b5f80fd5b348015610171575f80fd5b5061017a610488565b60405161018791906113eb565b60405180910390f35b34801561019b575f80fd5b506101a46104e9565b005b3480156101b1575f80fd5b506102096101c0366004611438565b5f9182527fa688f31953c2015baaf8c0a488ee1ee22eb0e05273cc1fd31ea4cbee42febc00602090815260408084206001600160a01b0393909316845291905290205460ff1690565b6040519015158152602001610187565b6101a46102273660046114a7565b610513565b348015610237575f80fd5b50610240610532565b604051908152602001610187565b348015610259575f80fd5b506101a4610268366004611547565b610560565b348015610278575f80fd5b50610209610287366004611438565b61065a565b348015610297575f80fd5b506102096102a63660046115e8565b5f9081527fa688f31953c2015baaf8c0a488ee1ee22eb0e05273cc1fd31ea4cbee42febc01602052604090205460ff1690565b3480156102e4575f80fd5b506101a46102f3366004611438565b6106b7565b348015610303575f80fd5b506101a4610752565b348015610317575f80fd5b506101a4610765565b34801561032b575f80fd5b5061020961033a366004611438565b6107ad565b34801561034a575f80fd5b506101a4610359366004611438565b610800565b348015610369575f80fd5b506103726108c4565b6040516001600160a01b039091168152602001610187565b348015610395575f80fd5b5073596e6682c72946af006b27c131793f2b62527a4b610372565b3480156103bb575f80fd5b5061017a6040518060400160405280600581526020017f352e302e3000000000000000000000000000000000000000000000000000000081525081565b348015610403575f80fd5b506101a46104123660046115ff565b6108f8565b348015610422575f80fd5b506101a4610431366004611627565b610aa4565b348015610441575f80fd5b50610209610450366004611640565b610bc6565b348015610460575f80fd5b50610372610c7b565b348015610474575f80fd5b506101a4610483366004611627565b610ca3565b6060604051806040016040528060038152602001621050d360ea1b8152506104af5f610d28565b6104b96001610d28565b6104c25f610d28565b6040516020016104d5949392919061168a565b604051602081830303815290604052905090565b5f5c5f805d600190810190805b8281101561050e57805c5f825d5f815d5081016104f6565b505050565b61051b610dc5565b61052482610e7c565b61052e8282610e84565b5050565b5f61053b610f53565b507f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc90565b80517fa688f31953c2015baaf8c0a488ee1ee22eb0e05273cc1fd31ea4cbee42febc005f5b8281101561061d575f8482815181106105a0576105a0611707565b602002602001015190506105b4813361065a565b6105fc5760405162461bcd60e51b81526020600482015260146024820152731cd95b99195c881a5cdb89dd08185b1b1bddd95960621b60448201526064015b60405180910390fd5b5f90815260018381016020526040909120805460ff19168217905501610585565b507f2fd616621b8415a2efb27b224024340ac767797553ce6fdf4c1adefd160504c68360405161064d919061171b565b60405180910390a1505050565b5f61066583836107ad565b806106b057505f8381527fa688f31953c2015baaf8c0a488ee1ee22eb0e05273cc1fd31ea4cbee42febc00602090815260408083206001600160a01b038616845290915290205460ff165b9392505050565b7fa688f31953c2015baaf8c0a488ee1ee22eb0e05273cc1fd31ea4cbee42febc006106e2833361065a565b6107255760405162461bcd60e51b81526020600482015260146024820152731cd95b99195c881a5cdb89dd08185b1b1bddd95960621b60448201526064016105f3565b5f928352602090815260408084206001600160a01b0390931684529190529020805460ff19166001179055565b61075a610f9c565b6107635f610fce565b565b338061076f610c7b565b6001600160a01b0316146107a15760405163118cdaa760e01b81526001600160a01b03821660048201526024016105f3565b6107aa81610fce565b50565b5f805f84846040516020016107de92919091825260601b6bffffffffffffffffffffffff1916602082015260340190565b60408051808303601f1901815291905280516020909101205c95945050505050565b3373596e6682c72946af006b27c131793f2b62527a4b1461086857610825823361065a565b6108685760405162461bcd60e51b81526020600482015260146024820152731cd95b99195c881a5cdb89dd08185b1b1bddd95960621b60448201526064016105f3565b5f828260405160200161089792919091825260601b6bffffffffffffffffffffffff1916602082015260340190565b6040516020818303038152906040528051906020012090506001815d60015f5c0181815d805f5d50505050565b5f807f9016d09d72d40fdae2fd8ceac6b6234c7706214fd39c1cd1e609a0528c1993005b546001600160a01b031692915050565b336001600160a01b038216036109765760405162461bcd60e51b815260206004820152603360248201527f636f6e7472616374416464726573732073686f756c642062652064696666657260448201527f656e742066726f6d206d73672e73656e6465720000000000000000000000000060648201526084016105f3565b335f9081527fa688f31953c2015baaf8c0a488ee1ee22eb0e05273cc1fd31ea4cbee42febc02602090815260408083206001600160a01b03868116855290835281842090851684529091529020547fa688f31953c2015baaf8c0a488ee1ee22eb0e05273cc1fd31ea4cbee42febc009060ff1615610a365760405162461bcd60e51b815260206004820152601160248201527f616c72656164792064656c65676174656400000000000000000000000000000060448201526064016105f3565b335f81815260028301602090815260408083206001600160a01b038881168086529184528285209088168086529352818420805460ff1916600117905590519193909290917ff03b7c0d4879b0bcbbf440794871f139c96fd13a145a8172b33b9cab5fa2830a9190a4505050565b7ff0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a00805468010000000000000000810460ff16159067ffffffffffffffff165f81158015610aee5750825b90505f8267ffffffffffffffff166001148015610b0a5750303b155b905081158015610b18575080155b15610b365760405163f92ee8a960e01b815260040160405180910390fd5b845467ffffffffffffffff191660011785558315610b6a57845468ff00000000000000001916680100000000000000001785555b610b7386611006565b8315610bbe57845468ff000000000000000019168555604051600181527fc7f505b2f371ae2175ee4913f4499e1f2633a7b5936321eed1cdaeb6115181d29060200160405180910390a15b505050505050565b5f8381527fa688f31953c2015baaf8c0a488ee1ee22eb0e05273cc1fd31ea4cbee42febc00602081815260408084206001600160a01b038616855290915282205460ff168015610c3557505f858152602082815260408083206001600160a01b038816845290915290205460ff165b8015610c7157506001600160a01b038084165f90815260028301602090815260408083208a8516845282528083209388168352929052205460ff165b9695505050505050565b5f807f237e158222e3e6968b72b9db0d8043aacf074ad9f650f0d1606b4d82ee432c006108e8565b610cab610f9c565b7f237e158222e3e6968b72b9db0d8043aacf074ad9f650f0d1606b4d82ee432c0080546001600160a01b0319166001600160a01b0383169081178255610cef6108c4565b6001600160a01b03167f38d16b8cac22d99fc7c124b9cd0de2d3fa1faef420bfe791d8c362d765e2270060405160405180910390a35050565b60605f610d3483611017565b60010190505f8167ffffffffffffffff811115610d5357610d53611462565b6040519080825280601f01601f191660200182016040528015610d7d576020820181803683370190505b5090508181016020015b5f19017f3031323334353637383961626364656600000000000000000000000000000000600a86061a8153600a8504945084610d8757509392505050565b306001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000161480610e5e57507f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316610e527f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc546001600160a01b031690565b6001600160a01b031614155b156107635760405163703e46dd60e11b815260040160405180910390fd5b6107aa610f9c565b816001600160a01b03166352d1902d6040518163ffffffff1660e01b8152600401602060405180830381865afa925050508015610ede575060408051601f3d908101601f19168201909252610edb9181019061175e565b60015b610f0657604051634c9c8ce360e01b81526001600160a01b03831660048201526024016105f3565b7f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc8114610f4957604051632a87526960e21b8152600481018290526024016105f3565b61050e83836110f9565b306001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016146107635760405163703e46dd60e11b815260040160405180910390fd5b33610fa56108c4565b6001600160a01b0316146107635760405163118cdaa760e01b81523360048201526024016105f3565b7f237e158222e3e6968b72b9db0d8043aacf074ad9f650f0d1606b4d82ee432c0080546001600160a01b031916815561052e8261114e565b61100e6111be565b6107aa8161120c565b5f807a184f03e93ff9f4daa797ed6e38ed64bf6a1f010000000000000000831061105f577a184f03e93ff9f4daa797ed6e38ed64bf6a1f010000000000000000830492506040015b6d04ee2d6d415b85acef8100000000831061108b576d04ee2d6d415b85acef8100000000830492506020015b662386f26fc1000083106110a957662386f26fc10000830492506010015b6305f5e10083106110c1576305f5e100830492506008015b61271083106110d557612710830492506004015b606483106110e7576064830492506002015b600a83106110f3576001015b92915050565b6111028261123d565b6040516001600160a01b038316907fbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b905f90a28051156111465761050e82826112b3565b61052e611325565b7f9016d09d72d40fdae2fd8ceac6b6234c7706214fd39c1cd1e609a0528c19930080546001600160a01b031981166001600160a01b03848116918217845560405192169182907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0905f90a3505050565b7ff0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a005468010000000000000000900460ff1661076357604051631afcd79f60e31b815260040160405180910390fd5b6112146111be565b6001600160a01b0381166107a157604051631e4fbdf760e01b81525f60048201526024016105f3565b806001600160a01b03163b5f0361127257604051634c9c8ce360e01b81526001600160a01b03821660048201526024016105f3565b7f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc80546001600160a01b0319166001600160a01b0392909216919091179055565b60605f80846001600160a01b0316846040516112cf9190611775565b5f60405180830381855af49150503d805f8114611307576040519150601f19603f3d011682016040523d82523d5f602084013e61130c565b606091505b509150915061131c858383611344565b95945050505050565b34156107635760405163b398979f60e01b815260040160405180910390fd5b60608261135957611354826113a0565b6106b0565b815115801561137057506001600160a01b0384163b155b1561139957604051639996b31560e01b81526001600160a01b03851660048201526024016105f3565b5092915050565b8051156113b05780518082602001fd5b60405163d6bda27560e01b815260040160405180910390fd5b5f5b838110156113e35781810151838201526020016113cb565b50505f910152565b602081525f82518060208401526114098160408501602087016113c9565b601f01601f19169190910160400192915050565b80356001600160a01b0381168114611433575f80fd5b919050565b5f8060408385031215611449575f80fd5b823591506114596020840161141d565b90509250929050565b634e487b7160e01b5f52604160045260245ffd5b604051601f8201601f1916810167ffffffffffffffff8111828210171561149f5761149f611462565b604052919050565b5f80604083850312156114b8575f80fd5b6114c18361141d565b915060208084013567ffffffffffffffff808211156114de575f80fd5b818601915086601f8301126114f1575f80fd5b81358181111561150357611503611462565b611515601f8201601f19168501611476565b9150808252878482850101111561152a575f80fd5b80848401858401375f848284010152508093505050509250929050565b5f6020808385031215611558575f80fd5b823567ffffffffffffffff8082111561156f575f80fd5b818501915085601f830112611582575f80fd5b81358181111561159457611594611462565b8060051b91506115a5848301611476565b81815291830184019184810190888411156115be575f80fd5b938501935b838510156115dc578435825293850193908501906115c3565b98975050505050505050565b5f602082840312156115f8575f80fd5b5035919050565b5f8060408385031215611610575f80fd5b6116198361141d565b91506114596020840161141d565b5f60208284031215611637575f80fd5b6106b08261141d565b5f805f8060808587031215611653575f80fd5b61165c8561141d565b9350602085013592506116716040860161141d565b915061167f6060860161141d565b905092959194509250565b5f855161169b818460208a016113c9565b61103b60f11b90830190815285516116ba816002840160208a016113c9565b808201915050601760f91b80600283015285516116de816003850160208a016113c9565b600392019182015283516116f98160048401602088016113c9565b016004019695505050505050565b634e487b7160e01b5f52603260045260245ffd5b602080825282518282018190525f9190848201906040850190845b8181101561175257835183529284019291840191600101611736565b50909695505050505050565b5f6020828403121561176e575f80fd5b5051919050565b5f82516117868184602087016113c9565b919091019291505056fea164736f6c6343000818000a";

type ACLConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ACLConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class ACL__factory extends ContractFactory {
  constructor(...args: ACLConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      ACL & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): ACL__factory {
    return super.connect(runner) as ACL__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ACLInterface {
    return new Interface(_abi) as ACLInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): ACL {
    return new Contract(address, _abi, runner) as unknown as ACL;
  }
}
