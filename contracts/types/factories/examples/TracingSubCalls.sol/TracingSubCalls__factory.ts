/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../../../common";
import type {
  TracingSubCalls,
  TracingSubCallsInterface,
} from "../../../examples/TracingSubCalls.sol/TracingSubCalls";

const _abi = [
  {
    inputs: [],
    name: "subCalls",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234801561000f575f80fd5b50610b228061001d5f395ff3fe608060405234801561000f575f80fd5b5060043610610029575f3560e01c806383a2d3771461002d575b5f80fd5b610035610037565b005b61019060405161004690610404565b908152602001604051809103905ff0801561005e5760015b1561006557505b6101f460405161007490610411565b908152602001604051809103905ff0801561008c5760015b1561009357505b5f6040516100a09061041e565b604051809103905ff0801580156100b9573d5f803e3d5ffd5b509050806001600160a01b031663acf495f36040518163ffffffff1660e01b81526004015f604051808303815f87803b1580156100f4575f80fd5b505af1925050508015610105575060015b50806001600160a01b031663a9cc47186040518163ffffffff1660e01b81526004015f604051808303815f87803b15801561013e575f80fd5b505af192505050801561014f575060015b50806001600160a01b0316630f829faa6040518163ffffffff1660e01b81526004015f604051808303815f87803b158015610188575f80fd5b505af1925050508015610199575060015b50806001600160a01b031663d1ea1a5f6040518163ffffffff1660e01b81526004015f604051808303815f87803b1580156101d2575f80fd5b505af19250505080156101e3575060015b50806001600160a01b031663c54e64a3620186a06040518263ffffffff1660e01b81526004015f604051808303815f88803b158015610220575f80fd5b5087f193505050508015610232575060015b50806001600160a01b031663ab218d826040518163ffffffff1660e01b81526004015f604051808303815f87803b15801561026b575f80fd5b505af192505050801561027c575060015b50806001600160a01b031663c9a758ef6040518163ffffffff1660e01b81526004015f604051808303815f87803b1580156102b5575f80fd5b505af19250505080156102c6575060015b50806001600160a01b031663492533426040518163ffffffff1660e01b81526004015f604051808303815f87803b1580156102ff575f80fd5b505af1925050508015610310575060015b50806001600160a01b031663a1dfaca86040518163ffffffff1660e01b81526004015f604051808303815f87803b158015610349575f80fd5b505af192505050801561035a575060015b507fb9a5dc0048db9a7d13548781df3cd4b2334606391f75f40c14225a92f4cb35376102bc60405161038b90610404565b9081526020018190604051809103905ff5905080156103a75760015b156103ae57505b7fb9a5dc0048db9a7d13548781df3cd4b2334606391f75f40c14225a92f4cb35376103206040516103de90610411565b9081526020018190604051809103905ff5905080156103fa5760015b1561040157505b50565b61014e8061042c83390190565b6101748061057a83390190565b610428806106ee8339019056fe608060405234801561000f575f80fd5b5060405161014e38038061014e83398101604081905261002e91610116565b6100378161003e565b505061012d565b5f61004a826005610050565b92915050565b5f807fed8d60e34876f751cc8b014c560745351147d9de11b9347c854e881b128ea6006001810154604051631ce2e8d760e31b8152600481018790527fff0000000000000000000000000000000000000000000000000000000000000060f887901b1660248201529192506001600160a01b03169063e71746b8906044016020604051808303815f875af11580156100ea573d5f803e3d5ffd5b505050506040513d601f19601f8201168201806040525081019061010e9190610116565b949350505050565b5f60208284031215610126575f80fd5b5051919050565b6015806101395f395ff3fe60806040525f80fdfea164736f6c6343000818000a608060405234801561000f575f80fd5b5060405161017438038061017483398101604081905261002e9161015c565b61003781610084565b5060405162461bcd60e51b815260206004820152601d60248201527f5468697320636f6e7374727563746f7220616c77617973206661696c73000000604482015260640160405180910390fd5b5f610090826005610096565b92915050565b5f807fed8d60e34876f751cc8b014c560745351147d9de11b9347c854e881b128ea6006001810154604051631ce2e8d760e31b8152600481018790527fff0000000000000000000000000000000000000000000000000000000000000060f887901b1660248201529192506001600160a01b03169063e71746b8906044016020604051808303815f875af1158015610130573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610154919061015c565b949350505050565b5f6020828403121561016c575f80fd5b505191905056fe608060405234801561000f575f80fd5b5061040b8061001d5f395ff3fe608060405234801561000f575f80fd5b50600436106100b9575f3560e01c8063acf495f311610072578063c9a758ef11610058578063c9a758ef146100f7578063d1ea1a5f146100ff578063efe93f6c14610107575f80fd5b8063acf495f3146100e7578063c54e64a3146100ef575f80fd5b8063a1dfaca8116100a2578063a1dfaca8146100cf578063a9cc4718146100d7578063ab218d82146100df575f80fd5b80630f829faa146100bd57806349253342146100c7575b5f80fd5b6100c561011a565b005b6100c5610171565b6100c561017c565b6100c561018c565b6100c56101e5565b6100c56101f0565b6100c56101fb565b6100c561020d565b6100c561021b565b6100c56101153660046103d0565b610273565b61012561025b6102eb565b50604051633bfa4fdb60e21b815261025c6004820152309063efe93f6c906024015f604051808303815f87803b15801561015d575f80fd5b505af192505050801561016e575060015b50565b6100c56102626102eb565b6101876102636102eb565b506001ff5b61019761025a6102eb565b5060405162461bcd60e51b815260206004820152601a60248201527f546869732066756e6374696f6e20616c77617973206661696c7300000000000060448201526064015b60405180910390fd5b61016e6102606102eb565b61016e6102596102eb565b61020661025f6102eb565b505b610208565b6102186102616102eb565b50fe5b604051633bfa4fdb60e21b815261025d6004820152309063efe93f6c906024015f604051808303815f87803b158015610252575f80fd5b505af1158015610264573d5f803e3d5ffd5b5050505061016e61025e6102eb565b61027c816102eb565b5060405162461bcd60e51b815260206004820152602c60248201527f546869732066756e6374696f6e20616c77617973206661696c7320776974682060448201527f637573746f6d20696e707574000000000000000000000000000000000000000060648201526084016101dc565b5f6102f78260056102fd565b92915050565b5f807fed8d60e34876f751cc8b014c560745351147d9de11b9347c854e881b128ea6006001810154604051631ce2e8d760e31b8152600481018790527fff0000000000000000000000000000000000000000000000000000000000000060f887901b16602482015291925073ffffffffffffffffffffffffffffffffffffffff169063e71746b8906044016020604051808303815f875af11580156103a4573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906103c891906103e7565b949350505050565b5f602082840312156103e0575f80fd5b5035919050565b5f602082840312156103f7575f80fd5b505191905056fea164736f6c6343000818000aa164736f6c6343000818000a";

type TracingSubCallsConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: TracingSubCallsConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class TracingSubCalls__factory extends ContractFactory {
  constructor(...args: TracingSubCallsConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      TracingSubCalls & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): TracingSubCalls__factory {
    return super.connect(runner) as TracingSubCalls__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): TracingSubCallsInterface {
    return new Interface(_abi) as TracingSubCallsInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): TracingSubCalls {
    return new Contract(address, _abi, runner) as unknown as TracingSubCalls;
  }
}
