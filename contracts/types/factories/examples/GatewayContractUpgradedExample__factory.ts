/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../../common";
import type {
  GatewayContractUpgradedExample,
  GatewayContractUpgradedExampleInterface,
} from "../../examples/GatewayContractUpgradedExample";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "target",
        type: "address",
      },
    ],
    name: "AddressEmptyCode",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "implementation",
        type: "address",
      },
    ],
    name: "ERC1967InvalidImplementation",
    type: "error",
  },
  {
    inputs: [],
    name: "ERC1967NonPayable",
    type: "error",
  },
  {
    inputs: [],
    name: "FailedCall",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidInitialization",
    type: "error",
  },
  {
    inputs: [],
    name: "NotInitializing",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "OwnableInvalidOwner",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "OwnableUnauthorizedAccount",
    type: "error",
  },
  {
    inputs: [],
    name: "UUPSUnauthorizedCallContext",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "slot",
        type: "bytes32",
      },
    ],
    name: "UUPSUnsupportedProxiableUUID",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "relayer",
        type: "address",
      },
    ],
    name: "AddedRelayer",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "requestID",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256[]",
        name: "cts",
        type: "uint256[]",
      },
      {
        indexed: false,
        internalType: "address",
        name: "contractCaller",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bytes4",
        name: "callbackSelector",
        type: "bytes4",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "msgValue",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "maxTimestamp",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "passSignaturesToCaller",
        type: "bool",
      },
    ],
    name: "EventDecryption",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint64",
        name: "version",
        type: "uint64",
      },
    ],
    name: "Initialized",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferStarted",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "relayer",
        type: "address",
      },
    ],
    name: "RemovedRelayer",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "requestID",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "success",
        type: "bool",
      },
      {
        indexed: false,
        internalType: "bytes",
        name: "result",
        type: "bytes",
      },
    ],
    name: "ResultCallback",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "implementation",
        type: "address",
      },
    ],
    name: "Upgraded",
    type: "event",
  },
  {
    inputs: [],
    name: "UPGRADE_INTERFACE_VERSION",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "acceptOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "relayerAddress",
        type: "address",
      },
    ],
    name: "addRelayer",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "requestID",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "decryptedCts",
        type: "bytes",
      },
      {
        internalType: "bytes[]",
        name: "signatures",
        type: "bytes[]",
      },
    ],
    name: "fulfillRequest",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "getCounter",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "getKmsVerifierAddress",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "getMAX_DELAY",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "getVersion",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_gatewayOwner",
        type: "address",
      },
    ],
    name: "initialize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "requestID",
        type: "uint256",
      },
    ],
    name: "isExpiredOrFulfilled",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "isRelayer",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "pendingOwner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "proxiableUUID",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "input",
        type: "bytes",
      },
    ],
    name: "removeOffset",
    outputs: [
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "relayerAddress",
        type: "address",
      },
    ],
    name: "removeRelayer",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256[]",
        name: "ctsHandles",
        type: "uint256[]",
      },
      {
        internalType: "bytes4",
        name: "callbackSelector",
        type: "bytes4",
      },
      {
        internalType: "uint256",
        name: "msgValue",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "maxTimestamp",
        type: "uint256",
      },
      {
        internalType: "bool",
        name: "passSignaturesToCaller",
        type: "bool",
      },
    ],
    name: "requestDecryption",
    outputs: [
      {
        internalType: "uint256",
        name: "initialCounter",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newImplementation",
        type: "address",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "upgradeToAndCall",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60a060405230608052348015610013575f80fd5b5061001c610021565b6100d3565b7ff0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a00805468010000000000000000900460ff16156100715760405163f92ee8a960e01b815260040160405180910390fd5b80546001600160401b03908116146100d05780546001600160401b0319166001600160401b0390811782556040519081527fc7f505b2f371ae2175ee4913f4499e1f2633a7b5936321eed1cdaeb6115181d29060200160405180910390a15b50565b608051611f0e6100f95f395f8181611288015281816112b1015261141b0152611f0e5ff3fe608060405260043610610157575f3560e01c8063715018a6116100bb578063b9244e1d11610071578063dd39f00d11610057578063dd39f00d146103d2578063e30c3978146103f1578063f2fde38b14610405575f80fd5b8063b9244e1d146103a0578063c4d66de8146103b3575f80fd5b80638ada066e116100a15780638ada066e146103115780638da5cb5b14610344578063ad3cb1cc14610358575f80fd5b8063715018a6146102e957806379ba5097146102fd575f80fd5b80634f1ef28611610110578063541d5548116100f6578063541d55481461023a57806360f0a5ac14610290578063651161e5146102af575f80fd5b80634f1ef2861461021157806352d1902d14610226575f80fd5b806333ba72a51161014057806333ba72a5146101a457806335a30d97146101c35780634c0d9277146101f2575f80fd5b80630d8e6e2c1461015b5780632538d86d14610185575b5f80fd5b348015610166575f80fd5b5061016f610424565b60405161017c91906118d6565b60405180910390f35b348015610190575f80fd5b50620151805b60405190815260200161017c565b3480156101af575f80fd5b5061016f6101be366004611999565b61049f565b3480156101ce575f80fd5b506101e26101dd3660046119cb565b61057a565b604051901515815260200161017c565b3480156101fd575f80fd5b5061019661020c366004611a16565b61060e565b61022461021f366004611acb565b610847565b005b348015610231575f80fd5b50610196610866565b348015610245575f80fd5b506101e2610254366004611b16565b6001600160a01b03165f9081527f2f81b8bba57448689ab73c47570e3de1ee7f779a62f121c9631b35b3eda2aa01602052604090205460ff1690565b34801561029b575f80fd5b506102246102aa366004611b16565b610894565b3480156102ba575f80fd5b5073208de73316e44722e16f6ddff40881a3e4f861045b6040516001600160a01b03909116815260200161017c565b3480156102f4575f80fd5b5061022461098f565b348015610308575f80fd5b506102246109a2565b34801561031c575f80fd5b507f2f81b8bba57448689ab73c47570e3de1ee7f779a62f121c9631b35b3eda2aa0054610196565b34801561034f575f80fd5b506102d16109ea565b348015610363575f80fd5b5061016f6040518060400160405280600581526020017f352e302e3000000000000000000000000000000000000000000000000000000081525081565b6102246103ae366004611b2f565b610a1e565b3480156103be575f80fd5b506102246103cd366004611b16565b610f10565b3480156103dd575f80fd5b506102246103ec366004611b16565b611032565b3480156103fc575f80fd5b506102d1611133565b348015610410575f80fd5b5061022461041f366004611b16565b61115b565b60606040518060400160405280600f81526020017f47617465776179436f6e747261637400000000000000000000000000000000008152506104655f6111e0565b61046f60026111e0565b6104785f6111e0565b60405160200161048b9493929190611c19565b604051602081830303815290604052905090565b60605f602083516104b09190611caa565b90505f8167ffffffffffffffff8111156104cc576104cc6118e8565b6040519080825280601f01601f1916602001820160405280156104f6576020820181803683370190505b5090505f5b82811015610572578461050f826020611cbd565b8151811061051f5761051f611cd0565b602001015160f81c60f81b82828151811061053c5761053c611cd0565b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff191690815f1a9053506001016104fb565b509392505050565b5f8181527f2f81b8bba57448689ab73c47570e3de1ee7f779a62f121c9631b35b3eda2aa0360205260408120547f2f81b8bba57448689ab73c47570e3de1ee7f779a62f121c9631b35b3eda2aa0090429060ff168061060657505f8481526002830160205260409020600301548111801561060657505f84815260028301602052604090206003015415155b949350505050565b5f42831161066e5760405162461bcd60e51b815260206004820152602260248201527f6d617854696d657374616d70206d757374206265206120667574757265206461604482015261746560f01b60648201526084015b60405180910390fd5b61067b6201518042611cbd565b8311156106ca5760405162461bcd60e51b815260206004820152601f60248201527f6d617854696d657374616d70206578636565646564204d41585f44454c4159006044820152606401610665565b507f2f81b8bba57448689ab73c47570e3de1ee7f779a62f121c9631b35b3eda2aa0080545f8181527f2f81b8bba57448689ab73c47570e3de1ee7f779a62f121c9631b35b3eda2aa02602052604081209192919088905b8181101561076557828b8b8381811061073c5761073c611cd0565b8354600180820186555f9586526020958690209290950293909301359201919091555001610721565b506001820180547fffffffffffffffff00000000000000000000000000000000000000000000000016337fffffffffffffffff00000000ffffffffffffffffffffffffffffffffffffffff811691909117600160a01b60e08c901c0217909155600283018890556003830187905560048301805460ff191687151517905560405185917f2dc9f5cb271a872eb89f488a1d216ded8a5b96226ca01f8d3128e028ae5459f891610820918e918e91908e908e908e908e90611ce4565b60405180910390a28254835f61083583611d68565b91905055505050509695505050505050565b61084f61127d565b61085882611334565b610862828261133c565b5050565b5f61086f611410565b507f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc90565b61089c611459565b6001600160a01b0381165f9081527f2f81b8bba57448689ab73c47570e3de1ee7f779a62f121c9631b35b3eda2aa0160205260409020547f2f81b8bba57448689ab73c47570e3de1ee7f779a62f121c9631b35b3eda2aa009060ff166109445760405162461bcd60e51b815260206004820152601860248201527f41646472657373206973206e6f7420612072656c6179657200000000000000006044820152606401610665565b6001600160a01b0382165f818152600183016020526040808220805460ff19169055517ff29639ce9f9f4d0a646c7c99291b0b1d3ca3a017b8f543d03d79d9f6fc4c58249190a25050565b610997611459565b6109a05f61148b565b565b33806109ac611133565b6001600160a01b0316146109de5760405163118cdaa760e01b81526001600160a01b0382166004820152602401610665565b6109e78161148b565b50565b5f807f9016d09d72d40fdae2fd8ceac6b6234c7706214fd39c1cd1e609a0528c1993005b546001600160a01b031692915050565b335f9081527f2f81b8bba57448689ab73c47570e3de1ee7f779a62f121c9631b35b3eda2aa0160205260409020547f2f81b8bba57448689ab73c47570e3de1ee7f779a62f121c9631b35b3eda2aa009060ff16610abd5760405162461bcd60e51b815260206004820152600b60248201527f4e6f742072656c617965720000000000000000000000000000000000000000006044820152606401610665565b5f8481527f2f81b8bba57448689ab73c47570e3de1ee7f779a62f121c9631b35b3eda2aa02602052604090819020905163dd66628760e01b81527f2f81b8bba57448689ab73c47570e3de1ee7f779a62f121c9631b35b3eda2aa009173208de73316e44722e16f6ddff40881a3e4f861049163dd66628791610b5c9173339ece85b9e11a3a3aa557582784a15d7f82aaf2919089908990600401611dd8565b6020604051808303815f875af1158015610b78573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610b9c9190611e5a565b610bf25760405162461bcd60e51b815260206004820152602160248201527f4b4d53207369676e617475726520766572696669636174696f6e206661696c656044820152601960fa1b6064820152608401610665565b5f85815260038201602052604090205460ff1615610c525760405162461bcd60e51b815260206004820152601c60248201527f5265717565737420697320616c72656164792066756c66696c6c6564000000006044820152606401610665565b5f85815260028201602090815260408083208151815460e09481028201850190935260c08101838152909391928492849190840182828015610cb157602002820191905f5260205f20905b815481526020019060010190808311610c9d575b505050918352505060018201546001600160a01b0381166020830152600160a01b900460e01b6001600160e01b031916604082015260028201546060820152600382015460808083019190915260049092015460ff16151560a090910152810151909150421115610d645760405162461bcd60e51b815260206004820152600860248201527f546f6f206c6174650000000000000000000000000000000000000000000000006044820152606401610665565b5f816040015187604051602401610d7d91815260200190565b60408051601f19818403018152918152602080830180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff166001600160e01b03199095169490941790935260a0850151905191935091610dde9184918a9101611e75565b60405160208183030381529060405291508015610e4b575f86604051602001610e079190611ea3565b60405160208183030381529060405290505f610e228261049f565b90508381604051602001610e37929190611e75565b604051602081830303815290604052935050505b5f8084602001516001600160a01b0316856060015185604051610e6e9190611eb5565b5f6040518083038185875af1925050503d805f8114610ea8576040519150601f19603f3d011682016040523d82523d5f602084013e610ead565b606091505b5091509150897fb0f2a12a0cc059295d0e43aaf8b9eebb32b58c03c68f5406fbf345c3a226bedd8383604051610ee4929190611ed0565b60405180910390a25050505f968752505060030160205250506040909120805460ff1916600117905550565b7ff0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a00805468010000000000000000810460ff16159067ffffffffffffffff165f81158015610f5a5750825b90505f8267ffffffffffffffff166001148015610f765750303b155b905081158015610f84575080155b15610fa25760405163f92ee8a960e01b815260040160405180910390fd5b845467ffffffffffffffff191660011785558315610fd657845468ff00000000000000001916680100000000000000001785555b610fdf866114c3565b831561102a57845468ff000000000000000019168555604051600181527fc7f505b2f371ae2175ee4913f4499e1f2633a7b5936321eed1cdaeb6115181d29060200160405180910390a15b505050505050565b61103a611459565b6001600160a01b0381165f9081527f2f81b8bba57448689ab73c47570e3de1ee7f779a62f121c9631b35b3eda2aa0160205260409020547f2f81b8bba57448689ab73c47570e3de1ee7f779a62f121c9631b35b3eda2aa009060ff16156110e35760405162461bcd60e51b815260206004820152601a60248201527f4164647265737320697320616c72656164792072656c617965720000000000006044820152606401610665565b6001600160a01b0382165f81815260018381016020526040808320805460ff1916909217909155517fd68caa126e02d8ca92285deaa53a0d5d4f692e587b00422ce504661cc74361bc9190a25050565b5f807f237e158222e3e6968b72b9db0d8043aacf074ad9f650f0d1606b4d82ee432c00610a0e565b611163611459565b7f237e158222e3e6968b72b9db0d8043aacf074ad9f650f0d1606b4d82ee432c0080546001600160a01b0319166001600160a01b03831690811782556111a76109ea565b6001600160a01b03167f38d16b8cac22d99fc7c124b9cd0de2d3fa1faef420bfe791d8c362d765e2270060405160405180910390a35050565b60605f6111ec836114d4565b60010190505f8167ffffffffffffffff81111561120b5761120b6118e8565b6040519080825280601f01601f191660200182016040528015611235576020820181803683370190505b5090508181016020015b5f19017f3031323334353637383961626364656600000000000000000000000000000000600a86061a8153600a850494508461123f57509392505050565b306001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016148061131657507f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031661130a7f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc546001600160a01b031690565b6001600160a01b031614155b156109a05760405163703e46dd60e11b815260040160405180910390fd5b6109e7611459565b816001600160a01b03166352d1902d6040518163ffffffff1660e01b8152600401602060405180830381865afa925050508015611396575060408051601f3d908101601f1916820190925261139391810190611eea565b60015b6113be57604051634c9c8ce360e01b81526001600160a01b0383166004820152602401610665565b7f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc811461140157604051632a87526960e21b815260048101829052602401610665565b61140b83836115b6565b505050565b306001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016146109a05760405163703e46dd60e11b815260040160405180910390fd5b336114626109ea565b6001600160a01b0316146109a05760405163118cdaa760e01b8152336004820152602401610665565b7f237e158222e3e6968b72b9db0d8043aacf074ad9f650f0d1606b4d82ee432c0080546001600160a01b03191681556108628261160b565b6114cb61167b565b6109e7816116c9565b5f807a184f03e93ff9f4daa797ed6e38ed64bf6a1f010000000000000000831061151c577a184f03e93ff9f4daa797ed6e38ed64bf6a1f010000000000000000830492506040015b6d04ee2d6d415b85acef81000000008310611548576d04ee2d6d415b85acef8100000000830492506020015b662386f26fc10000831061156657662386f26fc10000830492506010015b6305f5e100831061157e576305f5e100830492506008015b612710831061159257612710830492506004015b606483106115a4576064830492506002015b600a83106115b0576001015b92915050565b6115bf826116fa565b6040516001600160a01b038316907fbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b905f90a28051156116035761140b8282611770565b6108626117e2565b7f9016d09d72d40fdae2fd8ceac6b6234c7706214fd39c1cd1e609a0528c19930080546001600160a01b031981166001600160a01b03848116918217845560405192169182907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0905f90a3505050565b7ff0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a005468010000000000000000900460ff166109a057604051631afcd79f60e31b815260040160405180910390fd5b6116d161167b565b6001600160a01b0381166109de57604051631e4fbdf760e01b81525f6004820152602401610665565b806001600160a01b03163b5f0361172f57604051634c9c8ce360e01b81526001600160a01b0382166004820152602401610665565b7f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc80546001600160a01b0319166001600160a01b0392909216919091179055565b60605f80846001600160a01b03168460405161178c9190611eb5565b5f60405180830381855af49150503d805f81146117c4576040519150601f19603f3d011682016040523d82523d5f602084013e6117c9565b606091505b50915091506117d9858383611801565b95945050505050565b34156109a05760405163b398979f60e01b815260040160405180910390fd5b6060826118165761181182611860565b611859565b815115801561182d57506001600160a01b0384163b155b1561185657604051639996b31560e01b81526001600160a01b0385166004820152602401610665565b50805b9392505050565b8051156118705780518082602001fd5b60405163d6bda27560e01b815260040160405180910390fd5b5f5b838110156118a357818101518382015260200161188b565b50505f910152565b5f81518084526118c2816020860160208601611889565b601f01601f19169290920160200192915050565b602081525f61185960208301846118ab565b634e487b7160e01b5f52604160045260245ffd5b604051601f8201601f1916810167ffffffffffffffff81118282101715611925576119256118e8565b604052919050565b5f82601f83011261193c575f80fd5b813567ffffffffffffffff811115611956576119566118e8565b611969601f8201601f19166020016118fc565b81815284602083860101111561197d575f80fd5b816020850160208301375f918101602001919091529392505050565b5f602082840312156119a9575f80fd5b813567ffffffffffffffff8111156119bf575f80fd5b6106068482850161192d565b5f602082840312156119db575f80fd5b5035919050565b80356001600160e01b0319811681146119f9575f80fd5b919050565b80151581146109e7575f80fd5b80356119f9816119fe565b5f805f805f8060a08789031215611a2b575f80fd5b863567ffffffffffffffff80821115611a42575f80fd5b818901915089601f830112611a55575f80fd5b813581811115611a63575f80fd5b8a60208260051b8501011115611a77575f80fd5b602092830198509650611a8d91890190506119e2565b93506040870135925060608701359150611aa960808801611a0b565b90509295509295509295565b80356001600160a01b03811681146119f9575f80fd5b5f8060408385031215611adc575f80fd5b611ae583611ab5565b9150602083013567ffffffffffffffff811115611b00575f80fd5b611b0c8582860161192d565b9150509250929050565b5f60208284031215611b26575f80fd5b61185982611ab5565b5f805f60608486031215611b41575f80fd5b8335925060208085013567ffffffffffffffff80821115611b60575f80fd5b611b6c8883890161192d565b94506040870135915080821115611b81575f80fd5b818701915087601f830112611b94575f80fd5b813581811115611ba657611ba66118e8565b8060051b611bb58582016118fc565b918252838101850191858101908b841115611bce575f80fd5b86860192505b83831015611c0857823585811115611bea575f80fd5b611bf88d89838a010161192d565b8352509186019190860190611bd4565b809750505050505050509250925092565b5f8551611c2a818460208a01611889565b61103b60f11b9083019081528551611c49816002840160208a01611889565b808201915050601760f91b8060028301528551611c6d816003850160208a01611889565b60039201918201528351611c88816004840160208801611889565b016004019695505050505050565b634e487b7160e01b5f52601160045260245ffd5b818103818111156115b0576115b0611c96565b808201808211156115b0576115b0611c96565b634e487b7160e01b5f52603260045260245ffd5b60c081528660c08201525f7f07ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff881115611d1b575f80fd5b8760051b808a60e08501376001600160a01b03979097166020830152506001600160e01b031994909416604085015260608401929092526080830152151560a08201520160e00192915050565b5f60018201611d7957611d79611c96565b5060010190565b5f8282518085526020808601955060208260051b840101602086015f5b84811015611dcb57601f19868403018952611db98383516118ab565b98840198925090830190600101611d9d565b5090979650505050505050565b5f608082016001600160a01b038716835260206080602085015281875480845260a086019150885f5260205f2093505f5b81811015611e2557845483526001948501949284019201611e09565b50508481036040860152611e3981886118ab565b925050508281036060840152611e4f8185611d80565b979650505050505050565b5f60208284031215611e6a575f80fd5b8151611859816119fe565b5f8351611e86818460208801611889565b835190830190611e9a818360208801611889565b01949350505050565b602081525f6118596020830184611d80565b5f8251611ec6818460208701611889565b9190910192915050565b8215158152604060208201525f61060660408301846118ab565b5f60208284031215611efa575f80fd5b505191905056fea164736f6c6343000818000a";

type GatewayContractUpgradedExampleConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: GatewayContractUpgradedExampleConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class GatewayContractUpgradedExample__factory extends ContractFactory {
  constructor(...args: GatewayContractUpgradedExampleConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      GatewayContractUpgradedExample & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(
    runner: ContractRunner | null
  ): GatewayContractUpgradedExample__factory {
    return super.connect(runner) as GatewayContractUpgradedExample__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): GatewayContractUpgradedExampleInterface {
    return new Interface(_abi) as GatewayContractUpgradedExampleInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): GatewayContractUpgradedExample {
    return new Contract(
      address,
      _abi,
      runner
    ) as unknown as GatewayContractUpgradedExample;
  }
}
