/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type {
  Signer,
  BigNumberish,
  AddressLike,
  ContractDeployTransaction,
  ContractRunner,
} from "ethers";
import type { NonPayableOverrides } from "../../common";
import type {
  BlindAuction,
  BlindAuctionInterface,
} from "../../examples/BlindAuction";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_beneficiary",
        type: "address",
      },
      {
        internalType: "contract EncryptedERC20",
        name: "_tokenContract",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "biddingTime",
        type: "uint256",
      },
      {
        internalType: "bool",
        name: "isStoppable",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "OwnableInvalidOwner",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "OwnableUnauthorizedAccount",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "time",
        type: "uint256",
      },
    ],
    name: "TooEarly",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "time",
        type: "uint256",
      },
    ],
    name: "TooLate",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferStarted",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    inputs: [],
    name: "acceptOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "auctionEnd",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "beneficiary",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "einput",
        name: "encryptedValue",
        type: "bytes32",
      },
      {
        internalType: "bytes",
        name: "inputProof",
        type: "bytes",
      },
    ],
    name: "bid",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "bidCounter",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "claim",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "decryptWinningTicket",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "endTime",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "getBid",
    outputs: [
      {
        internalType: "euint64",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getDecryptedWinningTicket",
    outputs: [
      {
        internalType: "uint64",
        name: "",
        type: "uint64",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "manuallyStopped",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "pendingOwner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "uint64",
        name: "resultDecryption",
        type: "uint64",
      },
    ],
    name: "setDecryptedWinningTicket",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "stop",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "stoppable",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "ticketUser",
    outputs: [
      {
        internalType: "euint64",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "tokenContract",
    outputs: [
      {
        internalType: "contract EncryptedERC20",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "tokenTransferred",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "withdraw",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60806040526016805462ff0000191690553480156200001c575f80fd5b506040516200208a3803806200208a8339810160408190526200003f9162000490565b33806200006557604051631e4fbdf760e01b81525f600482015260240160405180910390fd5b6200007081620002a0565b50620001db62000111604080516080810182525f808252602082018190529181018290526060810191909152506040805160808101825273339ece85b9e11a3a3aa557582784a15d7f82aaf2815273596e6682c72946af006b27c131793f2b62527a4b6020820152736d5a11ac509c707c00bc3a0a113accc26c5325479181019190915273208de73316e44722e16f6ddff40881a3e4f86104606082015290565b80515f805160206200206a83398151915280546001600160a01b03199081166001600160a01b039384161790915560208301517fed8d60e34876f751cc8b014c560745351147d9de11b9347c854e881b128ea6018054831691841691909117905560408301517fed8d60e34876f751cc8b014c560745351147d9de11b9347c854e881b128ea6028054831691841691909117905560608301517fed8d60e34876f751cc8b014c560745351147d9de11b9347c854e881b128ea6038054909216921691909117905550565b7f93ab6e17f2c461cce6ea5d4ec117e51dda77a64affc2b2c05f8cd440def0e70080546001600160a01b03191673096b4679d45fb675d4e2c1e4565009cec99a12b1179055600d80546001600160a01b038087166001600160a01b03199283161790925560148054928616929091169190911790556200025c8242620004ec565b600c556200026a5f620002be565b60158190556200027a90620002e3565b601680545f6013559115156101000261ffff199092169190911790555062000524915050565b600180546001600160a01b0319169055620002bb81620002ef565b50565b5f8115620002d857620002d260016200033e565b92915050565b620002d25f6200033e565b620002bb81306200034b565b5f80546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b5f620002d28282620003c4565b5f5f805160206200206a8339815191528054604051631974142760e21b8152600481018690526001600160a01b0385811660248301529293509116906365d0509c906044015f604051808303815f87803b158015620003a8575f80fd5b505af1158015620003bb573d5f803e3d5ffd5b50505050505050565b5f805f805160206200206a8339815191526001810154604051631ce2e8d760e31b8152600481018790527fff0000000000000000000000000000000000000000000000000000000000000060f887901b1660248201529192506001600160a01b03169063e71746b8906044016020604051808303815f875af11580156200044d573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906200047391906200050c565b949350505050565b6001600160a01b0381168114620002bb575f80fd5b5f805f8060808587031215620004a4575f80fd5b8451620004b1816200047b565b6020860151909450620004c4816200047b565b6040860151606087015191945092508015158114620004e1575f80fd5b939692955090935050565b80820180821115620002d257634e487b7160e01b5f52601160045260245ffd5b5f602082840312156200051d575f80fd5b5051919050565b611b3880620005325f395ff3fe608060405234801561000f575f80fd5b5060043610610179575f3560e01c806379ba5097116100d2578063c8b342ab11610088578063edfdc41c11610063578063edfdc41c146102e0578063f2fde38b146102f3578063f66bdeae14610306575f80fd5b8063c8b342ab14610294578063c970214f146102bc578063e30c3978146102cf575f80fd5b806392eefbdf116100b857806392eefbdf1461025d578063bb4872de14610265578063c5822c0d14610287575f80fd5b806379ba5097146102455780638da5cb5b1461024d575f80fd5b806338af3eed116101325780634e71d92d1161010d5780634e71d92d1461022257806355a373d61461022a578063715018a61461023d575f80fd5b806338af3eed146101c75780633ccfd60b146101f25780634bb7ce65146101fa575f80fd5b80632a24f46c116101625780632a24f46c146101a35780633197cbb6146101ab57806338263e82146101b4575f80fd5b806303f693541461017d57806307da68f514610199575b5f80fd5b61018660135481565b6040519081526020015b60405180910390f35b6101a1610327565b005b6101a1610355565b610186600c5481565b6101a16101c2366004611876565b61044e565b600d546101da906001600160a01b031681565b6040516001600160a01b039091168152602001610190565b6101a1610941565b6101866102083660046118eb565b6001600160a01b03165f9081526011602052604090205490565b6101a1610a95565b6014546101da906001600160a01b031681565b6101a1610b67565b6101a1610b7a565b5f546001600160a01b03166101da565b6101a1610bbb565b60165461027790610100900460ff1681565b6040519015158152602001610190565b6016546102779060ff1681565b6101866102a23660046118eb565b6001600160a01b03165f9081526012602052604090205490565b6101a16102ca366004611911565b610c5e565b6001546001600160a01b03166101da565b6016546102779062010000900460ff1681565b6101a16103013660046118eb565b610cb8565b61030e610d35565b60405167ffffffffffffffff9091168152602001610190565b61032f610dc9565b601654610100900460ff16610342575f80fd5b6016805462ff0000191662010000179055565b600c544210801561036f575060165462010000900460ff16155b1561039c57600c54604051630a8d68c960e21b815260040161039391815260200190565b60405180910390fd5b60165460ff16156103ab575f80fd5b6016805460ff19166001179055600e546014546103d191906001600160a01b0316610df5565b601454600d54600e5460405163a9059cbb60e01b81526001600160a01b039283166004820152602481019190915291169063a9059cbb906044016020604051808303815f875af1158015610427573d5f803e3d5ffd5b505050506040513d601f19601f8201168201806040525081019061044b919061194b565b50565b600c544210158061046c575060165462010000900460ff1615156001145b1561049057600c5460405163348f2b4160e11b815260040161039391815260200190565b5f6104d08484848080601f0160208091040260200160405190810160405280939291908181526020018383808284375f92019190915250610dff92505050565b335f9081526012602052604081205491925081156106b3576014546040516370a0823160e01b81523060048201525f916001600160a01b0316906370a0823190602401602060405180830381865afa15801561052e573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610552919061196a565b90505f61055f8486610e15565b90505f61056c8686610e43565b90505f610582838361057d5f610e71565b610e7d565b60145490915061059c9082906001600160a01b0316610df5565b6014546040516323b872dd60e01b8152336004820152306024820152604481018390526001600160a01b03909116906323b872dd906064016020604051808303815f875af11580156105f0573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610614919061194b565b506014546040516370a0823160e01b81523060048201525f916001600160a01b0316906370a0823190602401602060405180830381865afa15801561065b573d5f803e3d5ffd5b505050506040513d601f19601f8201168201806040525081019061067f919061196a565b905061068b8186610e43565b95505f6106988888610e91565b335f9081526012602052604090205550610850945050505050565b60138054905f6106c283611995565b90915550506014546040516370a0823160e01b81523060048201525f916001600160a01b0316906370a0823190602401602060405180830381865afa15801561070d573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610731919061196a565b60145490915061074b9085906001600160a01b0316610df5565b6014546040516323b872dd60e01b8152336004820152306024820152604481018690526001600160a01b03909116906323b872dd906064016020604051808303815f875af115801561079f573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906107c3919061194b565b506014546040516370a0823160e01b81523060048201525f916001600160a01b0316906370a0823190602401602060405180830381865afa15801561080a573d5f803e3d5ffd5b505050506040513d601f19601f8201168201806040525081019061082e919061196a565b905061083a8183610e43565b335f908152601260205260409020819055925050505b335f9081526012602052604090205461086881610ebf565b6108728133610ec9565b5f61087b610ed3565b90505f610889600e54151590565b156108b8576108b161089b855f610ee3565b335f908152601160205260409020548490610e7d565b90506108bb565b50805b335f908152601160205260409020819055600e546108e257600e839055600f819055610916565b5f6108ef600e5485610e15565b90506108fe8185600e54610e7d565b600e819055506109118183600f54610e7d565b600f55505b610921600e54610ebf565b61092c600f54610ebf565b6109368133610ec9565b505050505050505050565b600c544210801561095b575060165462010000900460ff16155b1561097f57600c54604051630a8d68c960e21b815260040161039391815260200190565b335f90815260126020908152604080832054600f546011909352908320549092916109a991610f0b565b90505f6109ba828461057d5f610e71565b6014549091506109d49082906001600160a01b0316610df5565b60145460405163a9059cbb60e01b8152336004820152602481018390526001600160a01b039091169063a9059cbb906044016020604051808303815f875af1158015610a22573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610a46919061194b565b505f610a6983610a555f610e71565b335f90815260126020526040902054610e7d565b335f9081526012602052604090208190559050610a8581610ebf565b610a8f8133610ec9565b50505050565b600c5442108015610aaf575060165462010000900460ff16155b15610ad357600c54604051630a8d68c960e21b815260040161039391815260200190565b600f54335f908152601160205260408120549091610b0591610af59190610f39565b610b00601554610f67565b610f71565b9050610b1381601554610f7d565b6015819055610b2190610ebf565b5f610b2f82610a555f610e71565b335f9081526012602052604090208190559050610b4b81610ebf565b335f81815260126020526040902054610b6391610ec9565b5050565b610b6f610dc9565b610b785f610f89565b565b60015433906001600160a01b03168114610bb25760405163118cdaa760e01b81526001600160a01b0382166004820152602401610393565b61044b81610f89565b600c5442108015610bd5575060165462010000900460ff16155b15610bf957600c54604051630a8d68c960e21b815260040161039391815260200190565b6040805160018082528183019092525f9160208083019080368337019050509050610c23600f5490565b815f81518110610c3557610c356119ad565b6020908102919091010152610b638163c970214f60e01b5f610c584260646119c1565b5f610faf565b7f93ab6e17f2c461cce6ea5d4ec117e51dda77a64affc2b2c05f8cd440def0e700546001600160a01b03163314610c93575f80fd5b6010805467ffffffffffffffff191667ffffffffffffffff9290921691909117905550565b610cc0610dc9565b600180546001600160a01b03831673ffffffffffffffffffffffffffffffffffffffff199091168117909155610cfd5f546001600160a01b031690565b6001600160a01b03167f38d16b8cac22d99fc7c124b9cd0de2d3fa1faef420bfe791d8c362d765e2270060405160405180910390a350565b6010545f9067ffffffffffffffff168103610db85760405162461bcd60e51b815260206004820152602960248201527f57696e6e696e67207469636b657420686173206e6f74206265656e206465637260448201527f79707465642079657400000000000000000000000000000000000000000000006064820152608401610393565b5060105467ffffffffffffffff1690565b5f546001600160a01b03163314610b785760405163118cdaa760e01b8152336004820152602401610393565b610b6382826110c6565b5f610e0c8383600561113a565b90505b92915050565b5f82610e2757610e245f610e71565b92505b81610e3857610e355f610e71565b91505b610e0c83835f611238565b5f82610e5557610e525f610e71565b92505b81610e6657610e635f610e71565b91505b610e0c83835f6112f5565b5f610e0f82600561136c565b5f610e898484846113ff565b949350505050565b5f82610ea357610ea05f610e71565b92505b81610eb457610eb15f610e71565b91505b610e0c83835f611495565b61044b813061150c565b610b63828261150c565b5f610ede6005611552565b905090565b5f82610ef557610ef25f610e71565b92505b610e0c838367ffffffffffffffff1660016115f0565b5f82610f1d57610f1a5f610e71565b92505b81610f2e57610f2b5f610e71565b91505b610e0c83835f6115f0565b5f82610f4b57610f485f610e71565b92505b81610f5c57610f595f610e71565b91505b610e0c83835f611667565b5f610e0f826116de565b5f610e0c83835f61172c565b5f610e0c83835f6117a3565b6001805473ffffffffffffffffffffffffffffffffffffffff1916905561044b8161181a565b5f80516020611aec833981519152805460405163155f840160e21b81525f92916001600160a01b03169063557e100490610fed908a90600401611a0e565b5f604051808303815f87803b158015611004575f80fd5b505af1158015611016573d5f803e3d5ffd5b505050505f6110427f93ab6e17f2c461cce6ea5d4ec117e51dda77a64affc2b2c05f8cd440def0e70090565b8054604051634c0d927760e01b81529192506001600160a01b031690634c0d92779061107a908b908b908b908b908b90600401611a20565b6020604051808303815f875af1158015611096573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906110ba919061196a565b98975050505050505050565b5f80516020611aec83398151915280546040516346ce4e4960e11b8152600481018590526001600160a01b03848116602483015290911690638d9c9c92906044015b5f604051808303815f87803b15801561111f575f80fd5b505af1158015611131573d5f803e3d5ffd5b50505050505050565b5f80516020611b0c833981519152546040516302e817ff60e41b81525f915f80516020611aec833981519152916001600160a01b0390911690632e817ff0906111919088903390899060f88a901b90600401611a7a565b6020604051808303815f875af11580156111ad573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906111d1919061196a565b81546040516346ce4e4960e11b8152600481018390523360248201529193506001600160a01b031690638d9c9c92906044015f604051808303815f87803b15801561121a575f80fd5b505af115801561122c573d5f803e3d5ffd5b50505050509392505050565b5f80821561124b5750600160f81b61124e565b505f5b5f80516020611b0c83398151915254604051639675211f60e01b815260048101879052602481018690526001600160f81b0319831660448201525f80516020611aec833981519152916001600160a01b031690639675211f906064015b6020604051808303815f875af11580156112c7573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906112eb919061196a565b9695505050505050565b5f8082156113085750600160f81b61130b565b505f5b5f80516020611b0c83398151915254604051638c14cc2160e01b815260048101879052602481018690526001600160f81b0319831660448201525f80516020611aec833981519152916001600160a01b031690638c14cc21906064016112ab565b5f805f80516020611aec8339815191526001810154604051631ce2e8d760e31b8152600481018790526001600160f81b031960f887901b1660248201529192506001600160a01b03169063e71746b8906044016020604051808303815f875af11580156113db573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610e89919061196a565b5f805f80516020611aec833981519152600181015460405163cb3b940760e01b81526004810188905260248101879052604481018690529192506001600160a01b03169063cb3b9407906064016020604051808303815f875af1158015611468573d5f803e3d5ffd5b505050506040513d601f19601f8201168201806040525081019061148c919061196a565b95945050505050565b5f8082156114a85750600160f81b6114ab565b505f5b5f80516020611b0c8339815191525460405163f953e42760e01b815260048101879052602481018690526001600160f81b0319831660448201525f80516020611aec833981519152916001600160a01b03169063f953e427906064016112ab565b5f80516020611aec8339815191528054604051631974142760e21b8152600481018590526001600160a01b038481166024830152909116906365d0509c90604401611108565b5f80516020611b0c8339815191525460405163480694a760e11b815260f883901b6001600160f81b03191660048201525f915f80516020611aec833981519152916001600160a01b039091169063900d294e906024015b6020604051808303815f875af11580156115c5573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906115e9919061196a565b9392505050565b5f8082156116035750600160f81b611606565b505f5b5f80516020611b0c83398151915254604051631927108160e01b815260048101879052602481018690526001600160f81b0319831660448201525f80516020611aec833981519152916001600160a01b0316906319271081906064016112ab565b5f80821561167a5750600160f81b61167d565b505f5b5f80516020611b0c83398151915254604051630d7c62eb60e31b815260048101879052602481018690526001600160f81b0319831660448201525f80516020611aec833981519152916001600160a01b031690636be31758906064016112ab565b5f80516020611b0c833981519152546040516309c00ffd60e11b8152600481018390525f915f80516020611aec833981519152916001600160a01b03909116906313801ffa906024016115a9565b5f80821561173f5750600160f81b611742565b505f5b5f80516020611b0c83398151915254604051630ccd46b160e31b815260048101879052602481018690526001600160f81b0319831660448201525f80516020611aec833981519152916001600160a01b03169063666a3588906064016112ab565b5f8082156117b65750600160f81b6117b9565b505f5b5f80516020611b0c83398151915254604051633b1015f760e21b815260048101879052602481018690526001600160f81b0319831660448201525f80516020611aec833981519152916001600160a01b03169063ec4057dc906064016112ab565b5f80546001600160a01b0383811673ffffffffffffffffffffffffffffffffffffffff19831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b5f805f60408486031215611888575f80fd5b83359250602084013567ffffffffffffffff808211156118a6575f80fd5b818601915086601f8301126118b9575f80fd5b8135818111156118c7575f80fd5b8760208285010111156118d8575f80fd5b6020830194508093505050509250925092565b5f602082840312156118fb575f80fd5b81356001600160a01b03811681146115e9575f80fd5b5f8060408385031215611922575f80fd5b82359150602083013567ffffffffffffffff81168114611940575f80fd5b809150509250929050565b5f6020828403121561195b575f80fd5b815180151581146115e9575f80fd5b5f6020828403121561197a575f80fd5b5051919050565b634e487b7160e01b5f52601160045260245ffd5b5f600182016119a6576119a6611981565b5060010190565b634e487b7160e01b5f52603260045260245ffd5b80820180821115610e0f57610e0f611981565b5f815180845260208085019450602084015f5b83811015611a03578151875295820195908201906001016119e7565b509495945050505050565b602081525f610e0c60208301846119d4565b60a081525f611a3260a08301886119d4565b7fffffffff0000000000000000000000000000000000000000000000000000000096909616602083015250604081019390935260608301919091521515608090910152919050565b8481525f60206001600160a01b03861660208401526080604084015284518060808501525f5b81811015611abc5786810183015185820160a001528201611aa0565b505f60a0828601015260a0601f19601f8301168501019250505060ff60f81b831660608301529594505050505056feed8d60e34876f751cc8b014c560745351147d9de11b9347c854e881b128ea600ed8d60e34876f751cc8b014c560745351147d9de11b9347c854e881b128ea601a164736f6c6343000818000aed8d60e34876f751cc8b014c560745351147d9de11b9347c854e881b128ea600";

type BlindAuctionConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: BlindAuctionConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class BlindAuction__factory extends ContractFactory {
  constructor(...args: BlindAuctionConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    _beneficiary: AddressLike,
    _tokenContract: AddressLike,
    biddingTime: BigNumberish,
    isStoppable: boolean,
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(
      _beneficiary,
      _tokenContract,
      biddingTime,
      isStoppable,
      overrides || {}
    );
  }
  override deploy(
    _beneficiary: AddressLike,
    _tokenContract: AddressLike,
    biddingTime: BigNumberish,
    isStoppable: boolean,
    overrides?: NonPayableOverrides & { from?: string }
  ) {
    return super.deploy(
      _beneficiary,
      _tokenContract,
      biddingTime,
      isStoppable,
      overrides || {}
    ) as Promise<
      BlindAuction & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): BlindAuction__factory {
    return super.connect(runner) as BlindAuction__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): BlindAuctionInterface {
    return new Interface(_abi) as BlindAuctionInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): BlindAuction {
    return new Contract(address, _abi, runner) as unknown as BlindAuction;
  }
}
