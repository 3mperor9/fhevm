/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../../common";
import type { Reencrypt, ReencryptInterface } from "../../examples/Reencrypt";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "xAddress",
    outputs: [
      {
        internalType: "eaddress",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "xBool",
    outputs: [
      {
        internalType: "ebool",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "xUint128",
    outputs: [
      {
        internalType: "euint128",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "xUint16",
    outputs: [
      {
        internalType: "euint16",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "xUint256",
    outputs: [
      {
        internalType: "euint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "xUint32",
    outputs: [
      {
        internalType: "euint32",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "xUint4",
    outputs: [
      {
        internalType: "euint4",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "xUint64",
    outputs: [
      {
        internalType: "euint64",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "xUint8",
    outputs: [
      {
        internalType: "euint8",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "yBytes128",
    outputs: [
      {
        internalType: "ebytes128",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "yBytes256",
    outputs: [
      {
        internalType: "ebytes256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "yBytes64",
    outputs: [
      {
        internalType: "ebytes64",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234801562000010575f80fd5b50620000b7620000b1604080516080810182525f808252602082018190529181018290526060810191909152506040805160808101825273339ece85b9e11a3a3aa557582784a15d7f82aaf2815273596e6682c72946af006b27c131793f2b62527a4b6020820152736d5a11ac509c707c00bc3a0a113accc26c5325479181019190915273208de73316e44722e16f6ddff40881a3e4f86104606082015290565b6200036c565b620000c3600162000427565b5f819055620000d2906200044c565b5f54620000e0903362000458565b620000ec600462000468565b6001819055620000fc906200044c565b6001546200010b903362000458565b62000117602a62000476565b600281905562000127906200044c565b60025462000136903362000458565b62000142601062000484565b600381905562000152906200044c565b60035462000161903362000458565b6200016d602062000492565b60048190556200017d906200044c565b6004546200018c903362000458565b6200019e6010600160401b03620004a0565b6005819055620001ae906200044c565b600554620001bd903362000458565b620001d86f6d4b2086ba8e3d2104fbf4a8dfe9679d620004ae565b6006819055620001e8906200044c565b600654620001f7903362000458565b62000216738ba1f109551bd432803012645ac136ddd64dba72620004bc565b600781905562000226906200044c565b60075462000235903362000458565b620002607fa43c19c9c19fe2135e77133e55174fcb100521116fcad4e3a2e977a66c41ff11620004d3565b600881905562000270906200044c565b6008546200027f903362000458565b620002ad620002a760405180606001604052806037815260200162000d0860379139620004e1565b62000628565b6009819055620002bd906200044c565b600954620002cc903362000458565b620002fa620002f46040518060800160405280605f815260200162000ca9605f913962000636565b62000773565b600a8190556200030a906200044c565b600a5462000319903362000458565b62000347620003416040518060c001604052806095815260200162000d5f6095913962000781565b620008c2565b600b81905562000357906200044c565b600b5462000366903362000458565b62000b1e565b80515f8051602062000c8983398151915280546001600160a01b03199081166001600160a01b039384161790915560208301515f8051602062000d3f8339815191528054831691841691909117905560408301517fed8d60e34876f751cc8b014c560745351147d9de11b9347c854e881b128ea6028054831691841691909117905560608301517fed8d60e34876f751cc8b014c560745351147d9de11b9347c854e881b128ea6038054909216921691909117905550565b50565b5f811562000441576200043b6001620008d0565b92915050565b6200043b5f620008d0565b620004248130620008dd565b620004648282620008dd565b5050565b5f6200043b82600162000956565b5f6200043b82600262000956565b5f6200043b82600362000956565b5f6200043b82600462000956565b5f6200043b82600562000956565b5f6200043b82600662000956565b5f6200043b6001600160a01b038316600762000956565b5f6200043b82600862000956565b60606040825111156200053b5760405162461bcd60e51b815260206004820152601660248201527f496e70757420657863656564732036342062797465730000000000000000000060448201526064015b60405180910390fd5b604080518181526060810182525f916020820181803683370190505090505f835160406200056a919062000a6c565b90505f5b81811015620005af575f60f81b83828151811062000590576200059062000a82565b60200101906001600160f81b03191690815f1a9053506001016200056e565b505f5b84518110156200061f57848181518110620005d157620005d162000a82565b01602001516001600160f81b03191683620005ed838562000a96565b8151811062000600576200060062000a82565b60200101906001600160f81b03191690815f1a905350600101620005b2565b50909392505050565b5f6200043b82600962000a01565b60606080825111156200068c5760405162461bcd60e51b815260206004820152601760248201527f496e707574206578636565647320313238206279746573000000000000000000604482015260640162000532565b60408051608080825260a082019092525f916020820181803683370190505090505f83516080620006be919062000a6c565b90505f5b8181101562000703575f60f81b838281518110620006e457620006e462000a82565b60200101906001600160f81b03191690815f1a905350600101620006c2565b505f5b84518110156200061f5784818151811062000725576200072562000a82565b01602001516001600160f81b0319168362000741838562000a96565b8151811062000754576200075462000a82565b60200101906001600160f81b03191690815f1a90535060010162000706565b5f6200043b82600a62000a01565b606061010082511115620007d85760405162461bcd60e51b815260206004820152601760248201527f496e707574206578636565647320323536206279746573000000000000000000604482015260640162000532565b6040805161010080825261012082019092525f916020820181803683370190505090505f83516101006200080d919062000a6c565b90505f5b8181101562000852575f60f81b83828151811062000833576200083362000a82565b60200101906001600160f81b03191690815f1a90535060010162000811565b505f5b84518110156200061f5784818151811062000874576200087462000a82565b01602001516001600160f81b0319168362000890838562000a96565b81518110620008a357620008a362000a82565b60200101906001600160f81b03191690815f1a90535060010162000855565b5f6200043b82600b62000a01565b5f6200043b828262000956565b5f5f8051602062000c898339815191528054604051631974142760e21b8152600481018690526001600160a01b0385811660248301529293509116906365d0509c906044015f604051808303815f87803b1580156200093a575f80fd5b505af11580156200094d573d5f803e3d5ffd5b50505050505050565b5f8051602062000d3f83398151915254604051631ce2e8d760e31b81526004810184905260f883901b6001600160f81b03191660248201525f915f8051602062000c89833981519152916001600160a01b039091169063e71746b8906044015b6020604051808303815f875af1158015620009d3573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190620009f9919062000aac565b949350505050565b5f8051602062000d3f8339815191525460405163e0c5cbb360e01b81525f915f8051602062000c89833981519152916001600160a01b039091169063e0c5cbb390620009b690879060f888901b9060040162000ac4565b634e487b7160e01b5f52601160045260245ffd5b818103818111156200043b576200043b62000a58565b634e487b7160e01b5f52603260045260245ffd5b808201808211156200043b576200043b62000a58565b5f6020828403121562000abd575f80fd5b5051919050565b604081525f83518060408401525f5b8181101562000af2576020818701810151606086840101520162000ad3565b505f606082850101526060601f19601f83011684010191505060ff60f81b831660208301529392505050565b61015d8062000b2c5f395ff3fe608060405234801561000f575f80fd5b50600436106100cf575f3560e01c80637b30c9e51161007d578063b7e7eb7711610058578063b7e7eb7714610135578063c8779aca1461013e578063ce12cc8314610147575f80fd5b80637b30c9e51461011b5780638e5bbd9614610124578063939836cd1461012c575f80fd5b80634c4ef3c9116100ad5780634c4ef3c9146101005780636319a6011461010957806365ca063614610112575f80fd5b8063269f0c5f146100d357806326c3e487146100ee578063378ccfd0146100f7575b5f80fd5b6100dc60015481565b60405190815260200160405180910390f35b6100dc60085481565b6100dc60055481565b6100dc600b5481565b6100dc60045481565b6100dc60095481565b6100dc60065481565b6100dc5f5481565b6100dc60025481565b6100dc60075481565b6100dc600a5481565b6100dc6003548156fea164736f6c6343000818000aed8d60e34876f751cc8b014c560745351147d9de11b9347c854e881b128ea60013e7819123de6e2870c7e83bb764508e22d7c3ab8a5aee6bdfb26355ef0d3f1977d651b83bf5f78634fa360aa14debdc3daa6a587b5c2fb1710ab4d6677e62a8577f2d9fecc190ad8b11c9f0a5ec3138b27da1f055437af8c90a9495dad23019d179e0cc7e816dc944582ed4f5652f5951900098fc2e0a15a7ea4dc8cfa4e3b6c54beea5ee95e56b728762f659347ce1d4aa1b05fcc5ed8d60e34876f751cc8b014c560745351147d9de11b9347c854e881b128ea601d179e0cc7e816dc944582ed4f5652f5951900098fc2e0a15a7ea4dc8cfa4e3b6c54beea5ee95e56b728762f659347ce1d4aa1b05fcc513e7819123de6e2870c7e83bb764508e22d7c3ab8a5aee6bdfb26355ef0d3f1977d651b83bf5f78634fa360aa14debdc3daa6a587b5c2fb1710ab4d6677e62a8577f2d9fecc190ad8b11c9f0a5ec3138b27da1f055437af8c90a9495dad230";

type ReencryptConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ReencryptConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Reencrypt__factory extends ContractFactory {
  constructor(...args: ReencryptConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      Reencrypt & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): Reencrypt__factory {
    return super.connect(runner) as Reencrypt__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ReencryptInterface {
    return new Interface(_abi) as ReencryptInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): Reencrypt {
    return new Contract(address, _abi, runner) as unknown as Reencrypt;
  }
}
