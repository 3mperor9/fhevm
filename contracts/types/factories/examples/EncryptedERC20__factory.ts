/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../../common";
import type {
  EncryptedERC20,
  EncryptedERC20Interface,
} from "../../examples/EncryptedERC20";

const _abi = [
  {
    inputs: [
      {
        internalType: "string",
        name: "name_",
        type: "string",
      },
      {
        internalType: "string",
        name: "symbol_",
        type: "string",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "OwnableInvalidOwner",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "OwnableUnauthorizedAccount",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "spender",
        type: "address",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint64",
        name: "amount",
        type: "uint64",
      },
    ],
    name: "Mint",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferStarted",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [],
    name: "acceptOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
    ],
    name: "allowance",
    outputs: [
      {
        internalType: "euint64",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "euint64",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "einput",
        name: "encryptedAmount",
        type: "bytes32",
      },
      {
        internalType: "bytes",
        name: "inputProof",
        type: "bytes",
      },
    ],
    name: "approve",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "wallet",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "euint64",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "decimals",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint64",
        name: "mintedAmount",
        type: "uint64",
      },
    ],
    name: "mint",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "pendingOwner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint64",
        name: "",
        type: "uint64",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "einput",
        name: "encryptedAmount",
        type: "bytes32",
      },
      {
        internalType: "bytes",
        name: "inputProof",
        type: "bytes",
      },
    ],
    name: "transfer",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "euint64",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transfer",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "euint64",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "einput",
        name: "encryptedAmount",
        type: "bytes32",
      },
      {
        internalType: "bytes",
        name: "inputProof",
        type: "bytes",
      },
    ],
    name: "transferFrom",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234801562000010575f80fd5b506040516200197d3803806200197d83398101604081905262000033916200033b565b33806200005957604051631e4fbdf760e01b81525f600482015260240160405180910390fd5b620000648162000131565b506200010b62000105604080516080810182525f808252602082018190529181018290526060810191909152506040805160808101825273339ece85b9e11a3a3aa557582784a15d7f82aaf2815273596e6682c72946af006b27c131793f2b62527a4b6020820152736d5a11ac509c707c00bc3a0a113accc26c5325479181019190915273208de73316e44722e16f6ddff40881a3e4f86104606082015290565b6200014f565b60026200011983826200042b565b5060036200012882826200042b565b505050620004f7565b600180546001600160a01b03191690556200014c816200022b565b50565b80517fed8d60e34876f751cc8b014c560745351147d9de11b9347c854e881b128ea60080546001600160a01b03199081166001600160a01b039384161790915560208301517fed8d60e34876f751cc8b014c560745351147d9de11b9347c854e881b128ea6018054831691841691909117905560408301517fed8d60e34876f751cc8b014c560745351147d9de11b9347c854e881b128ea6028054831691841691909117905560608301517fed8d60e34876f751cc8b014c560745351147d9de11b9347c854e881b128ea6038054909216921691909117905550565b5f80546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b634e487b7160e01b5f52604160045260245ffd5b5f82601f8301126200029e575f80fd5b81516001600160401b0380821115620002bb57620002bb6200027a565b604051601f8301601f19908116603f01168101908282118183101715620002e657620002e66200027a565b816040528381526020925086602085880101111562000303575f80fd5b5f91505b8382101562000326578582018301518183018401529082019062000307565b5f602085830101528094505050505092915050565b5f80604083850312156200034d575f80fd5b82516001600160401b038082111562000364575f80fd5b62000372868387016200028e565b9350602085015191508082111562000388575f80fd5b5062000397858286016200028e565b9150509250929050565b600181811c90821680620003b657607f821691505b602082108103620003d557634e487b7160e01b5f52602260045260245ffd5b50919050565b601f8211156200042657805f5260205f20601f840160051c81016020851015620004025750805b601f840160051c820191505b8181101562000423575f81556001016200040e565b50505b505050565b81516001600160401b038111156200044757620004476200027a565b6200045f81620004588454620003a1565b84620003db565b602080601f83116001811462000495575f84156200047d5750858301515b5f19600386901b1c1916600185901b178555620004ef565b5f85815260208120601f198616915b82811015620004c557888601518255948401946001909101908401620004a4565b5085821015620004e357878501515f19600388901b60f8161c191681555b505060018460011b0185555b505050505050565b61147880620005055f395ff3fe608060405234801561000f575f80fd5b506004361061012f575f3560e01c80638da5cb5b116100ad578063b32c10011161007d578063e30c397811610063578063e30c3978146102a1578063f2fde38b146102b2578063fb9d09c8146102c5575f80fd5b8063b32c10011461027b578063dd62ed3e1461028e575f80fd5b80638da5cb5b1461022957806395d89b411461024d5780639a09435214610255578063a9059cbb14610268575f80fd5b8063313ce56711610102578063715018a6116100e8578063715018a61461020457806379ba50971461020e5780637b7e0a5a14610216575f80fd5b8063313ce567146101b457806370a08231146101ce575f80fd5b806306fdde0314610133578063095ea7b31461015157806318160ddd1461017457806323b872dd146101a1575b5f80fd5b61013b6102d8565b6040516101489190611167565b60405180910390f35b61016461015f366004611194565b610368565b6040519015158152602001610148565b600154600160a01b900467ffffffffffffffff1660405167ffffffffffffffff9091168152602001610148565b6101646101af3660046111bc565b6103d0565b6101bc600681565b60405160ff9091168152602001610148565b6101f66101dc3660046111f5565b6001600160a01b03165f9081526004602052604090205490565b604051908152602001610148565b61020c610409565b005b61020c61041c565b610164610224366004611253565b610465565b5f546001600160a01b03165b6040516001600160a01b039091168152602001610148565b61013b6104a9565b6101646102633660046112a9565b6104b8565b610164610276366004611194565b61050a565b610164610289366004611253565b61054e565b6101f661029c366004611313565b610592565b6001546001600160a01b0316610235565b61020c6102c03660046111f5565b6105c1565b61020c6102d3366004611344565b61063e565b6060600280546102e79061136b565b80601f01602080910402602001604051908101604052809291908181526020018280546103139061136b565b801561035e5780601f106103355761010080835404028352916020019161035e565b820191905f5260205f20905b81548152906001019060200180831161034157829003601f168201915b5050505050905090565b5f610372826107e3565b61037a575f80fd5b336103868185856107f4565b836001600160a01b0316816001600160a01b03167ff37f546c25e850257cc0c94f92bec94a17e2f0e884ddda268a25d8144b70eb6a60405160405180910390a35060019392505050565b5f6103da826107e3565b6103e2575f80fd5b335f6103ef86838661083d565b90506103fd868686846108ce565b50600195945050505050565b6104116109d1565b61041a5f6109fd565b565b60015433906001600160a01b031681146104595760405163118cdaa760e01b81526001600160a01b03821660048201526024015b60405180910390fd5b610462816109fd565b50565b5f6103fd856102768686868080601f0160208091040260200160405190810160405280939291908181526020018383808284375f92019190915250610a2392505050565b6060600380546102e79061136b565b5f6104fd86866101af8787878080601f0160208091040260200160405190810160405280939291908181526020018383808284375f92019190915250610a2392505050565b5060019695505050505050565b5f610514826107e3565b61051c575f80fd5b335f90815260046020526040812054610536908490610a30565b9050610544338585846108ce565b5060019392505050565b5f6103fd8561015f8686868080601f0160208091040260200160405190810160405280939291908181526020018383808284375f92019190915250610a2392505050565b6001600160a01b038083165f9081526005602090815260408083209385168352929052908120545b9392505050565b6105c96109d1565b600180546001600160a01b03831673ffffffffffffffffffffffffffffffffffffffff1990911681179091556106065f546001600160a01b031690565b6001600160a01b03167f38d16b8cac22d99fc7c124b9cd0de2d3fa1faef420bfe791d8c362d765e2270060405160405180910390a350565b6106466109d1565b61068360045f61065d5f546001600160a01b031690565b6001600160a01b03166001600160a01b031681526020019081526020015f205482610a5e565b60045f6106975f546001600160a01b031690565b6001600160a01b03166001600160a01b031681526020019081526020015f20819055506106f660045f6106d15f546001600160a01b031690565b6001600160a01b03166001600160a01b031681526020019081526020015f2054610a86565b61074360045f61070d5f546001600160a01b031690565b6001600160a01b03166001600160a01b031681526020019081526020015f205461073e5f546001600160a01b031690565b610a90565b600154610762908290600160a01b900467ffffffffffffffff166113a3565b600180547fffffffff0000000000000000ffffffffffffffffffffffffffffffffffffffff16600160a01b67ffffffffffffffff938416021790555f54604080519284168352516001600160a01b03909116917f9109de113672aaca72ede8bc906f7aafabee865311ac020fb15c71edf94a0a01919081900360200190a250565b5f6107ee8233610a9e565b92915050565b6001600160a01b038084165f90815260056020908152604080832093861683529290522081905561082481610a86565b61082e8184610a90565b6108388183610a90565b505050565b6001600160a01b038084165f9081526005602090815260408083209386168352929052908120545f61086f8483610a30565b6001600160a01b0387165f9081526004602052604081205491925090610896908690610a30565b90505f6108a38284610b2a565b90506108c388886108be846108b8898c610b36565b89610b64565b6107f4565b979650505050505050565b5f6108e282846108dd5f610b70565b610b64565b6001600160a01b0385165f90815260046020526040812054919250906109089083610b7c565b6001600160a01b0386165f908152600460205260409020819055905061092d81610a86565b6109378186610a90565b6001600160a01b0386165f908152600460205260408120546109599084610b36565b6001600160a01b0388165f908152600460205260409020819055905061097e81610a86565b6109888188610a90565b856001600160a01b0316876001600160a01b03167f4853ae1b4d437c4255ac16cd3ceda3465975023f27cb141584cd9d44440fed8260405160405180910390a350505050505050565b5f546001600160a01b0316331461041a5760405163118cdaa760e01b8152336004820152602401610450565b6001805473ffffffffffffffffffffffffffffffffffffffff1916905561046281610baa565b5f6105ba83836005610c06565b5f82610a4257610a3f5f610b70565b92505b81610a5357610a505f610b70565b91505b6105ba83835f610d17565b5f82610a7057610a6d5f610b70565b92505b6105ba838367ffffffffffffffff166001610de7565b6104628130610e71565b610a9a8282610e71565b5050565b5f805f8051602061144c8339815191528054604051632fd514cd60e11b8152600481018790526001600160a01b038681166024830152929350911690635faa299a90604401602060405180830381865afa158015610afe573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610b2291906113d7565b949350505050565b5f6105ba83835f610ee7565b5f82610b4857610b455f610b70565b92505b81610b5957610b565f610b70565b91505b6105ba83835f610f71565b5f610b22848484610ffb565b5f6107ee826005611091565b5f82610b8e57610b8b5f610b70565b92505b81610b9f57610b9c5f610b70565b91505b6105ba83835f610de7565b5f80546001600160a01b0383811673ffffffffffffffffffffffffffffffffffffffff19831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b7fed8d60e34876f751cc8b014c560745351147d9de11b9347c854e881b128ea601546040516302e817ff60e41b81525f915f8051602061144c833981519152916001600160a01b0390911690632e817ff090610c709088903390899060f88a901b906004016113f6565b6020604051808303815f875af1158015610c8c573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610cb09190611434565b81546040516346ce4e4960e11b8152600481018390523360248201529193506001600160a01b031690638d9c9c92906044015f604051808303815f87803b158015610cf9575f80fd5b505af1158015610d0b573d5f803e3d5ffd5b50505050509392505050565b5f808215610d2a5750600160f81b610d2d565b505f5b7fed8d60e34876f751cc8b014c560745351147d9de11b9347c854e881b128ea601546040516334a6d7b960e11b815260048101879052602481018690526001600160f81b0319831660448201525f8051602061144c833981519152916001600160a01b03169063694daf72906064015b6020604051808303815f875af1158015610db9573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610ddd9190611434565b9695505050505050565b5f808215610dfa5750600160f81b610dfd565b505f5b7fed8d60e34876f751cc8b014c560745351147d9de11b9347c854e881b128ea6015460405163f953e42760e01b815260048101879052602481018690526001600160f81b0319831660448201525f8051602061144c833981519152916001600160a01b03169063f953e42790606401610d9d565b5f5f8051602061144c8339815191528054604051631974142760e21b8152600481018690526001600160a01b0385811660248301529293509116906365d0509c906044015f604051808303815f87803b158015610ecc575f80fd5b505af1158015610ede573d5f803e3d5ffd5b50505050505050565b5f808215610efa5750600160f81b610efd565b505f5b7fed8d60e34876f751cc8b014c560745351147d9de11b9347c854e881b128ea60154604051630ccd46b160e31b815260048101879052602481018690526001600160f81b0319831660448201525f8051602061144c833981519152916001600160a01b03169063666a358890606401610d9d565b5f808215610f845750600160f81b610f87565b505f5b7fed8d60e34876f751cc8b014c560745351147d9de11b9347c854e881b128ea60154604051638c14cc2160e01b815260048101879052602481018690526001600160f81b0319831660448201525f8051602061144c833981519152916001600160a01b031690638c14cc2190606401610d9d565b5f805f8051602061144c833981519152600181015460405163cb3b940760e01b81526004810188905260248101879052604481018690529192506001600160a01b03169063cb3b9407906064016020604051808303815f875af1158015611064573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906110889190611434565b95945050505050565b5f805f8051602061144c8339815191526001810154604051631ce2e8d760e31b8152600481018790526001600160f81b031960f887901b1660248201529192506001600160a01b03169063e71746b8906044016020604051808303815f875af1158015611100573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610b229190611434565b5f81518084525f5b818110156111485760208185018101518683018201520161112c565b505f602082860101526020601f19601f83011685010191505092915050565b602081525f6105ba6020830184611124565b80356001600160a01b038116811461118f575f80fd5b919050565b5f80604083850312156111a5575f80fd5b6111ae83611179565b946020939093013593505050565b5f805f606084860312156111ce575f80fd5b6111d784611179565b92506111e560208501611179565b9150604084013590509250925092565b5f60208284031215611205575f80fd5b6105ba82611179565b5f8083601f84011261121e575f80fd5b50813567ffffffffffffffff811115611235575f80fd5b60208301915083602082850101111561124c575f80fd5b9250929050565b5f805f8060608587031215611266575f80fd5b61126f85611179565b935060208501359250604085013567ffffffffffffffff811115611291575f80fd5b61129d8782880161120e565b95989497509550505050565b5f805f805f608086880312156112bd575f80fd5b6112c686611179565b94506112d460208701611179565b935060408601359250606086013567ffffffffffffffff8111156112f6575f80fd5b6113028882890161120e565b969995985093965092949392505050565b5f8060408385031215611324575f80fd5b61132d83611179565b915061133b60208401611179565b90509250929050565b5f60208284031215611354575f80fd5b813567ffffffffffffffff811681146105ba575f80fd5b600181811c9082168061137f57607f821691505b60208210810361139d57634e487b7160e01b5f52602260045260245ffd5b50919050565b67ffffffffffffffff8181168382160190808211156113d057634e487b7160e01b5f52601160045260245ffd5b5092915050565b5f602082840312156113e7575f80fd5b815180151581146105ba575f80fd5b8481526001600160a01b0384166020820152608060408201525f61141d6080830185611124565b905060ff60f81b8316606083015295945050505050565b5f60208284031215611444575f80fd5b505191905056feed8d60e34876f751cc8b014c560745351147d9de11b9347c854e881b128ea600a164736f6c6343000818000a";

type EncryptedERC20ConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: EncryptedERC20ConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class EncryptedERC20__factory extends ContractFactory {
  constructor(...args: EncryptedERC20ConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    name_: string,
    symbol_: string,
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(name_, symbol_, overrides || {});
  }
  override deploy(
    name_: string,
    symbol_: string,
    overrides?: NonPayableOverrides & { from?: string }
  ) {
    return super.deploy(name_, symbol_, overrides || {}) as Promise<
      EncryptedERC20 & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): EncryptedERC20__factory {
    return super.connect(runner) as EncryptedERC20__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): EncryptedERC20Interface {
    return new Interface(_abi) as EncryptedERC20Interface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): EncryptedERC20 {
    return new Contract(address, _abi, runner) as unknown as EncryptedERC20;
  }
}
