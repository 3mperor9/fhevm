/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../../common";
import type {
  SmartAccount,
  SmartAccountInterface,
} from "../../examples/SmartAccount";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "OwnableInvalidOwner",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "OwnableUnauthorizedAccount",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferStarted",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    inputs: [],
    name: "acceptOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "target",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "value",
            type: "uint256",
          },
          {
            internalType: "bytes",
            name: "data",
            type: "bytes",
          },
        ],
        internalType: "struct SmartAccount.Transaction[]",
        name: "transactions",
        type: "tuple[]",
      },
    ],
    name: "executeBatch",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "pendingOwner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234801561000f575f80fd5b50338061003557604051631e4fbdf760e01b81525f600482015260240160405180910390fd5b61003e81610044565b506100af565b600180546001600160a01b031916905561005d81610060565b50565b5f80546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6105d8806100bc5f395ff3fe608060405260043610610063575f3560e01c80638da5cb5b116100415780638da5cb5b146100a4578063e30c3978146100d8578063f2fde38b146100f5575f80fd5b806334fcd5be14610067578063715018a61461007c57806379ba509714610090575b5f80fd5b61007a610075366004610412565b610114565b005b348015610087575f80fd5b5061007a61020c565b34801561009b575f80fd5b5061007a61021f565b3480156100af575f80fd5b505f546001600160a01b03165b6040516001600160a01b03909116815260200160405180910390f35b3480156100e3575f80fd5b506001546001600160a01b03166100bc565b348015610100575f80fd5b5061007a61010f36600461056b565b610263565b61011c6102e0565b5f5b8151811015610208575f82828151811061013a5761013a61058b565b602002602001015190505f815f01516001600160a01b031682602001518360400151604051610169919061059f565b5f6040518083038185875af1925050503d805f81146101a3576040519150601f19603f3d011682016040523d82523d5f602084013e6101a8565b606091505b50509050806101fe5760405162461bcd60e51b815260206004820152601260248201527f5472616e73616374696f6e206661696c6564000000000000000000000000000060448201526064015b60405180910390fd5b505060010161011e565b5050565b6102146102e0565b61021d5f61030c565b565b60015433906001600160a01b031681146102575760405163118cdaa760e01b81526001600160a01b03821660048201526024016101f5565b6102608161030c565b50565b61026b6102e0565b600180546001600160a01b03831673ffffffffffffffffffffffffffffffffffffffff1990911681179091556102a85f546001600160a01b031690565b6001600160a01b03167f38d16b8cac22d99fc7c124b9cd0de2d3fa1faef420bfe791d8c362d765e2270060405160405180910390a350565b5f546001600160a01b0316331461021d5760405163118cdaa760e01b81523360048201526024016101f5565b6001805473ffffffffffffffffffffffffffffffffffffffff19169055610260815f80546001600160a01b0383811673ffffffffffffffffffffffffffffffffffffffff19831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b634e487b7160e01b5f52604160045260245ffd5b6040516060810167ffffffffffffffff811182821017156103c0576103c0610389565b60405290565b604051601f8201601f1916810167ffffffffffffffff811182821017156103ef576103ef610389565b604052919050565b80356001600160a01b038116811461040d575f80fd5b919050565b5f6020808385031215610423575f80fd5b823567ffffffffffffffff8082111561043a575f80fd5b818501915085601f83011261044d575f80fd5b81358181111561045f5761045f610389565b8060051b61046e8582016103c6565b9182528381018501918581019089841115610487575f80fd5b86860192505b8383101561055e578235858111156104a3575f80fd5b86016060601f19828d0381018213156104ba575f80fd5b6104c261039d565b6104cd8b85016103f7565b81526040848101358c8301529284013592898411156104ea575f80fd5b83850194508e603f8601126104fd575f80fd5b8b85013593508984111561051357610513610389565b6105238c84601f870116016103c6565b92508383528e81858701011115610538575f80fd5b838186018d8501375f9383018c019390935291820152835250918601919086019061048d565b9998505050505050505050565b5f6020828403121561057b575f80fd5b610584826103f7565b9392505050565b634e487b7160e01b5f52603260045260245ffd5b5f82515f5b818110156105be57602081860181015185830152016105a4565b505f92019182525091905056fea164736f6c6343000818000a";

type SmartAccountConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: SmartAccountConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class SmartAccount__factory extends ContractFactory {
  constructor(...args: SmartAccountConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      SmartAccount & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): SmartAccount__factory {
    return super.connect(runner) as SmartAccount__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): SmartAccountInterface {
    return new Interface(_abi) as SmartAccountInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): SmartAccount {
    return new Contract(address, _abi, runner) as unknown as SmartAccount;
  }
}
