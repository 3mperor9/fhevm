{{- if .Values.kyverno.enabled -}}
apiVersion: kyverno.io/v1
kind: Policy
metadata:
  name: {{ include "kmsCoreName" . }}-mutate-pod
  annotations:
    "helm.sh/hook": "pre-install,pre-upgrade"
    "helm.sh/hook-weight": "-10"
    "helm.sh/hook-delete-policy": "before-hook-creation"
spec:
  validationFailureAction: Audit
  rules:
    - name: replace-service-account-name
      match:
        any:
          - resources:
              kinds:
                - Pod
              names:
                - "{{ include "kmsCoreName" . }}-*"
      preconditions:
        all:
        - key: "{{`{{ request.object.metadata.labels.job-name }}`}}"
          operator: NotEquals
          value: "{{ include "kmsCoreName" . }}-threshold-init"
        - key: "{{`{{ request.object.spec.serviceAccountName }}`}}"
          operator: NotEquals
          value: ""
      mutate:
        patchStrategicMerge:
          spec:
            serviceAccountName: "{{`{{request.object.metadata.name}}`}}"

    - name: replace-configmap-names-init
      match:
        any:
          - resources:
              kinds:
                - Pod
              names:
                - "{{ include "kmsCoreName" . }}-*"
      preconditions:
        all:
        - key: "{{`{{ request.object.metadata.labels.job-name }}`}}"
          operator: NotEquals
          value: "{{ include "kmsCoreName" . }}-threshold-init"
      mutate:
        foreach:
        - list: "request.object.spec.initContainers"
          patchStrategicMerge:
            spec:
              initContainers:
              - name: "{{`{{ element.name }}`}}"
                envFrom:
                - configMapRef:
                    name: "{{`{{request.object.metadata.name}}`}}"

    - name: replace-configmap-names-containers
      match:
        any:
          - resources:
              kinds:
                - Pod
              names:
                - "{{ include "kmsCoreName" . }}-*"
      preconditions:
        all:
        - key: "{{`{{ request.object.metadata.labels.job-name }}`}}"
          operator: NotEquals
          value: "{{ include "kmsCoreName" . }}-threshold-init"
      mutate:
        foreach:
        - list: "request.object.spec.containers"
          patchStrategicMerge:
            spec:
              containers:
              - name: "{{`{{ element.name }}`}}"
                envFrom:
                - configMapRef:
                    name: "{{`{{request.object.metadata.name}}`}}"
{{- end -}}