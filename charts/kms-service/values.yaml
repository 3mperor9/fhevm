kmsPeers:
  # Defines either the peer ID when count=1 or the start ID of a set of peers when count>1
  id: 1
  # The number of peers managed by the StatefulSets
  count: 1

kmsConnector:
  enabled: true
  nameOverride:
  image:
    name: ghcr.io/zama-ai/kms-blockchain-connector
    tag: v0.8.1
  storage:
    # storageClassName: gp3
    capacity: 5Gi
  catchUpNumBlocks: 100000
  contractAddress:
    configmap:
      name: kms-sc-deploy-kms-sc-addresses
      ascAddressKey: DEBUG_ASC_ETHEREUM_ADDRESS
      cscAddressKey: CSC_ADDRESS
  blockchainGrpcUrl: "http://kms-blockchain-rpc:9090"
  blockchainRpcUrl: "http://kms-blockchain-rpc:26657"
  kvStoreUrl: "http://kms-blockchain-kv-store:8088"
  wallet:
    secret:
      name: kms-connector-keys
  nodeSelector:
  affinity:
  tolerations:

kmsCore:
  enabled: true
  nameOverride:
  addressOverride:
  image:
    name: ghcr.io/zama-ai/kms-service
    tag: latest
  serviceAccountName:
  envFrom:
    configmap:
      name:
  thresholdMode:
    enabled: false
    # If left unset, the chart will generate the list automatically based on pod replicas of the statefulset
    peersList:
#      - id: 1
#        host: kms-service-core-1
#        port: 50001
#      - id: 2
#        host: kms-service-core-2
#        port: 50001
    initializationScript:
      enabled: false
    dec_capacity: 10000
    min_dec_cache: 6000
    num_sessions_preproc: 2
    decryption_mode: "NoiseFloodSmall"
  nitroEnclave:
    enabled: false
    # Enclave CPU count
    cpuCount: 6
    # Enclave Memory in GiB
    memoryGiB: 10
    cid: 20
    userId: 10003
    groupId: 10002
    ports:
      logger: 3000
      config: 4000
      tracing: 4317
      imds: 5000
      sts: 5500
      s3: 6000
      awskms: 7000
      webidentitytoken: 4100
      peer: 10000
  publicVault:
    s3:
      enabled: true
      bucket: kms-public
      path: kms
  privateVault:
    s3:
      enabled: false
      bucket: kms-private
      path: kms
    awskms:
      enabled: false
      keychain: awskms://symm/00000000-0000-0000-0000-000000000000
  aws:
    roleArn:
    region: eu-west-1
  storage:
    # storageClassName: gp3
    capacity: 5Gi
  ports:
    client: 50100
    peer: 50001
    metrics: 9646
  workdir: /root
  serviceMonitor:
    enabled: false
  # Note: these requests/limits is only for non-enclave workloads, this will not be allocated to the kms-core process running in Nitro
  resources:
    requests: {}
      # memory: 1Gi
      # cpu: 1
    limits:
      # memory: 30Gi
      ephemeralStorage: 1Gi
      grpcTimeout: 360
      grpcMaxMessageSize: 2097520
  nodeSelector:
  affinity:
  tolerations:
mtls:
  enabled: false

kmsSimulator:
  enabled: false
  image:
    name: ghcr.io/zama-ai/kms-blockchain-simulator
    tag: latest
  contractAddress:
    configmap:
      name: kms-sc-deploy-kms-sc-addresses
      ascAddressKey: DEBUG_ASC_ETHEREUM_ADDRESS
      cscAddressKey: CSC_ADDRESS
  wallet:
    secret:
      name: kms-connector-keys
      key: connector-1.mnemonic

kubeUtils:
  image:
    name: ghcr.io/zama-ai/kube-utils
    tag: 0.2.0

runMode: dev

redis:
  enabled: false
  host: "redis://redis-master.common.svc.cluster.local"

tracing:
  enabled: false
  endpoint: "http://otel-deployment-opentelemetry-collector.observability.svc.cluster.local:4317"
  otlp_timeout_ms: 10000

minio:
  enabled: false
  fullnameOverride: minio
  auth:
    rootUser: minio-admin
    rootPassword: minio-admin
  provisioning:
    enabled: true
    buckets:
      - name: kms-public
        region: eu-west-1
    users:
      - username: kms-access-key-id
        password: kms-secret-access-key
        policies:
          - readwrite
    extraCommands:
      - "mc anonymous set public provisioning/kms-public"

rustLog: info
debug: true

podSecurityContext:
  # To set when the image will support non root user
  #  runAsUser: 1000
  #  runAsGroup: 1000
  #  fsGroup: 1000
  #  runAsNonRoot: true
  allowPrivilegeEscalation: false
  readOnlyRootFilesystem: true
  capabilities:
    drop:
      - ALL
  privileged: false

podSecurityContextForEnclave:
  fsGroup: 1001     # Keep this as 1001 to match device group
  supplementalGroups: [1001]  # Add device group as supplemental
