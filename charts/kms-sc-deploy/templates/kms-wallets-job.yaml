{{- if .Values.kmsWallets.enabled -}}
apiVersion: batch/v1
kind: Job
metadata:
  labels:
    app: kms-blockchain-wallets
    app.kubernetes.io/name: {{ include "kmsWalletsName" . }}
  name: {{ include "kmsWalletsName" . }}
  annotations:
    "helm.sh/hook": "pre-install"
    "helm.sh/hook-weight": "1"
spec:
  template:
    metadata:
      labels:
        app: kms-blockchain-wallets
        app.kubernetes.io/name: {{ include "kmsWalletsName" . }}
      annotations:
        checksum/config: {{ include (print $.Template.BasePath "/kms-wallets-config.yaml") . | sha256sum }}
    spec:
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      serviceAccountName: {{ include "kmsWalletsName" . }}
      initContainers:
        - name: wait-for-faucet
          image: {{ .Values.kmsWallets.image.name }}:{{ .Values.kmsWallets.image.tag }}
          command: ["/bin/sh", "-c"]
          args:
            - |
              echo "waiting for the faucet to be available"
              timeout 300 sh -c 'while [[ "$(curl -s -o /dev/null -w ''%{http_code}'' {{ .Values.kmsWallets.funds.faucetUrl }})" != "200" ]]; do sleep 1; done' || false
      containers:
        - name: kms-blockchain-wallets
          image: {{ .Values.kmsWallets.image.name }}:{{ .Values.kmsWallets.image.tag }}
          command: ["/bin/sh", "-c"]
          args:
            - "/app/create-wallets.sh"
          workingDir: /job
          volumeMounts:
            - mountPath: "/job"
              name: workdir
            - mountPath: /app/create-wallets.sh
              subPath: create-wallets.sh
              name: config
        {{- if .Values.kmsWallets.keyring.create }}
        - name: kms-blockchain-keyring
          image: {{ .Values.kmsWallets.image.name }}:{{ .Values.kmsWallets.image.tag }}
          command: ["/bin/sh", "-c"]
          args:
            - "/app/create-keyring.sh"
          workingDir: /job
          volumeMounts:
            - mountPath: "/job"
              name: workdir
            - mountPath: /app/create-keyring.sh
              subPath: create-keyring.sh
              name: config
        {{- end }}
      restartPolicy: Never
      imagePullSecrets:
        - name: registry-credentials
      volumes:
        - name: config
          configMap:
            name: {{ include "kmsWalletsName" . }}-config
            defaultMode: 0777
            items:
            - key: "create-wallets.sh"
              path: "create-wallets.sh"
            {{- if .Values.kmsWallets.keyring.create }}
            - key: "create-keyring.sh"
              path: "create-keyring.sh"
            {{- end }}
        - name: workdir
          emptyDir: {}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
---
kind: Role
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: {{ include "kmsWalletsName" . }}
  annotations:
    "helm.sh/hook": "pre-install"
    "helm.sh/hook-weight": "1"
rules:
  - apiGroups: [""]
    resources: ["secrets"]
    verbs: ["get", "create"]
---
kind: RoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: {{ include "kmsWalletsName" . }}
  annotations:
    "helm.sh/hook": "pre-install"
    "helm.sh/hook-weight": "1"
subjects:
  - kind: ServiceAccount
    name: {{ include "kmsWalletsName" . }}
    namespace: {{ .Release.Namespace }}
roleRef:
  kind: Role
  name: {{ include "kmsWalletsName" . }}
  apiGroup: rbac.authorization.k8s.io
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: {{ include "kmsWalletsName" . }}
  annotations:
    "helm.sh/hook": "pre-install"
    "helm.sh/hook-weight": "1"
{{- end }}
