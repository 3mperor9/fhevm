apiVersion: v1
kind: ConfigMap
metadata:
  labels:
    app: gateway
    app.kubernetes.io/name: {{ include "gatewayName" . }}
  name: {{ include "gatewayName" . }}-config
data:
  gateway.toml: |
    # Set to true to start an emulated KMS backend.  This option enables a debug
    # mode where a mocked KMS backend is used instead of a real one.  Useful for
    # testing and development purposes without needing actual KMS services.
    debug = false

    # Configure to match the KMS mode: it must be either centralized or threshold.
    mode = "{{ .Values.gateway.config.mode }}"

    # The URL that the gateway API service will listen on.
    api_url = "0.0.0.0:7077"

    # path to the file that store the state
    state_path = "./.GW_STATE"

    # The section consists of the configuration settings related to the Ethereum
    # network and smart contract event interactions.
    [ethereum]

    # Ethereum chain ID, used in EIP712 signatures.
    chain_id = {{ .Values.gateway.config.chainId | quote }}

    # A static salt value, which is used for EIP712 signing in order to distingush
    # different dApps.  It is computed as the SHA 256 digest of the string "Zama
    # TKMS ASC".  But commented out for now since it needs to be supported in
    # fhevmjs see https://github.com/zama-ai/fhevmjs/issues/116
    # eip712_salt = "e4edb9fdce7fd5cfd13ebe4ff9931f986b5df5b30ed798e2d72d1ce400b615d9"

    # Listener type, one of FHEVM_NATIVE or COPROCESSOR, which specifies the type
    # of listener to be used for processing Ethereum events.
    # - FHEVM_NATIVE: Use the FHEVM native listener.
    # - COPROCESSOR: Use the Coprocessor listener.
    listener_type = {{ .Values.gateway.config.listenerType | quote }}

    # URL of the Ethereum WebSocket server.  Used for establishing a WebSocket
    # connection to an Ethereum node.
    wss_url = "ws://{{ .Values.gateway.config.fhevmFullNodeAddress }}"

    # URL of the Ethereum http server. Used for establishing an http connection to
    # an Ethereum node.
    http_url = "http://{{ .Values.gateway.config.fhevmFullNodeAddressHTTP }}"

    # Address of the FHE library smart ontract on the Ethereum blockchain.  Used
    # for interactions with the FHE library contract.
    fhe_lib_address = "000000000000000000000000000000000000005d"

    # Api key used to retrieve the ciphertext using gRPC call on the Coprocessor.
    coprocessor_api_key = ""

    # Address of the OraclePredeploy or GatewayPredeploy contract on the Ethereum
    # blockchain. Used for pre-deployment operations related to the oracle.
    oracle_predeploy_address = "c8c9303Cd7F337fab769686B593B87DC3403E0ce"

    # Test Address used for testing asynchronous decryption on the Ethereum
    # blockchain.
    test_async_decrypt_address = "99F460504563579922352932A42172B3c04a1420"

    # Verifying contract address for the KMSVerifier EIP712.
    kmsverifier_vc_address = "66f9664f97F2b50F62D13eA064982f936dE76657"

    # Version for the KMSVerifier EIP712.
    kmsverifier_version = "1"

    # Name for the KMSVerifier EIP712.
    kmsverifier_name = "KMSVerifier"

    # Version for the Reencryption EIP712,
    # defined in
    # https://github.com/zama-ai/fhevmjs/blob/19fd3b8d63b587f45a3cf1e53c443999d8865de6/src/sdk/keypair.ts#L53-L62
    reenc_domain_version = "1"

    # Name for the Reencryption EIP712.
    reenc_domain_name = "Authorization token"

    # Address of the ACL contract.
    acl_address = "66f9664f97F2b50F62D13eA064982f936dE76657"

    # Address of the coprocessor to query for ciphertexts (gRPC).
    coprocessor_url = {{ .Values.gateway.config.coprocessorURL | quote }}

    # Optionally explicitly set the gas price.
    # gas_price = 1_000_000_000

    # Optionally explicitly set transaction gas limit.
    gas_limit = 750_000

    # Base gas price, must be one of "current_gas_price" or
    # "eip1559_max_priority_fee_per_gas"
    base_gas = "current_gas_price"

    # gas escalator retry interval in seconds
    gas_escalator_retry_interval = 5

    # gas escalator increase % for each retry
    # the current implementation doesn't actually do a retry but add this factor
    # to the gas price estimation
    gas_escalator_increase = 20

    # Relayer private key.
    relayer_key = "7ec931411ad75a7c201469a385d6f18a325d4923f9f213bd882bbea87e160b67"


    # Retry config for get_cipertext in the coprocessor mode.
    [ethereum.get_ciphertext_retry]

    # Set the maximum retry count, resulting in an exponential backoff delay.
    max_retries = 6

    # The base factor in milliseconds for exponential backoff,
    # that can reach up to 32 seconds (1s, 2s, 4s, 8s, 16s, 32s).
    factor = 1000

    # This section contains the KMS (Key Management System) blockchain settings.
    [kms]

    # Address of the KMS smart contract on the blockchain.  Used for interactions
    # with the KMS contract.
    asc_address = {{ .Values.gateway.config.ascAddress | quote }}

    # Address of the KMS CSC on the blockchain.
    csc_address = {{ .Values.gateway.config.cscAddress | quote }}

    # Mnemonic phrase for accessing the KMS.  This is a human-readable string of
    # words used to derive cryptographic keys.  Ideally we should storage this in a
    # safer location.
    mnemonic = ""

    # Base URL of the KMS service.  Used for making HTTP requests to the KMS
    # service.
    address = "http://{{ .Values.gateway.config.kmsBlockchainValidatorGRPCAddress }}"

    # Identifies the specific key to be used for cryptographic operations within
    # the KMS.
    #
    # TODO stop-gap these will eventually be fetched from the ASC. This line can be
    # removed if the key get setup with the simulator. Should be removed as part of
    # https://github.com/zama-ai/fhevm/issues/548
    #
    # Key ID used within the KMS.
    key_id = {{ .Values.gateway.config.kmsKeyId | quote }}
    # CRS ID used within the KMS.
    crs_id = {{ .Values.gateway.config.crsId2048 | quote }}

    # List of prefixed of URL endpoints for the public storage of the KMS.  The key
    # in the map is the MPC ID of the party. I.e. [1; amount of parties]
    [kms.public_storage]
    {{- range $k, $v := .Values.gateway.config.kmsBuckets }}
    {{ $k }} = {{ $v | quote }}
    {{- end }}

    # The URL of a key-value storage service used for transferring ciphertexts that
    # are too large to be stored on the blockchain between the connector and the
    # gateway. The configuration must be the same as what's on the connector.
    [storage]
    url = {{ .Values.gateway.config.kvStoreURL | quote }}

    # Tracing configuration for logging and metrics.
    [tracing]

    # The service name. This is used to identify the service in the tracing system.
    # It is recommended to use the same service name across all instances of the
    # service.
    service_name = "gateway"

    # The endpoint of the tracing system. If it is not set, tracing will be
    # redirected to stdout. This is an optional configuration.
    endpoint = {{ .Values.tracing.endpoint | quote }}
  connector.toml: |
    tick_interval_secs = 3
    storage_path = "/storage/events.toml"

    [oracle]
    addresses = ["http://{{ .Values.gateway.config.kmsBlockchainValidatorRPCAddress }}"]

    [blockchain]
    addresses = ["http://{{ .Values.gateway.config.kmsBlockchainValidatorGRPCAddress }}"]
    asc_address = {{ .Values.gateway.config.ascAddress | quote }}
    csc_address = {{ .Values.gateway.config.cscAddress | quote }}

    [blockchain.signkey]
    # It should be either mnemonic or bip32
    mnemonic = ""
    bip32 = "xprv9s21ZrQH143K3FQVQn1Z6"

    [blockchain.fee]
    denom = "ucosm"
    amount = 3000000

    [core]
    {{- if eq .Values.gateway.config.mode "threshold" }}
    shares_needed = 2
    {{- end }}
    addresses = {{ .Values.gateway.config.coreAddresses }}

    [core.timeout_config]
    channel_timeout = 60

    [core.timeout_config.crs]
    initial_wait_time = 60
    retry_interval = 60
    max_poll_count = 120

    [core.timeout_config.insecure_crs]
    initial_wait_time = 9
    retry_interval = 3
    max_poll_count = 36

    [core.timeout_config.keygen]
    initial_wait_time = 18000
    retry_interval = 15000
    max_poll_count = 1150

    [core.timeout_config.preproc]
    initial_wait_time = 18000
    retry_interval = 15000
    max_poll_count = 1150

    [core.timeout_config.decryption]
    initial_wait_time = 10
    retry_interval = 5
    max_poll_count = 24

    [core.timeout_config.reencryption]
    initial_wait_time = 10
    retry_interval = 5
    max_poll_count = 24

    [core.timeout_config.verify_proven_ct]
    initial_wait_time = 0
    retry_interval = 0
    max_poll_count = 1

    [core.timeout_config.insecure_key_gen]
    initial_wait_time = 9
    retry_interval = 3
    max_poll_count = 36

    [tracing]
    service_name = "asc-connector"
    endpoint = {{ .Values.tracing.endpoint | quote }}

    [store]
    url = {{ .Values.gateway.config.kvStoreURL | quote }}
  entrypoint.sh: |
    #!/bin/bash
    export GATEWAY__ETHEREUM__ORACLE_PREDEPLOY_ADDRESS="${GATEWAY__ETHEREUM__ORACLE_PREDEPLOY_ADDRESS:2}"
    export GATEWAY__ETHEREUM__KMSVERIFIER_VC_ADDRESS="${GATEWAY__ETHEREUM__KMSVERIFIER_VC_ADDRESS:2}"
    export GATEWAY__ETHEREUM__ACL_ADDRESS="${GATEWAY__ETHEREUM__ACL_ADDRESS:2}"
    gateway
